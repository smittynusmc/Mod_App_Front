{"ast":null,"code":"'use client';\n/* eslint-disable jsx-a11y/aria-role */\n\nimport _defineProperty from \"C:/Projects/Mod_App_Front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"slots\", \"slotProps\", \"direction\", \"orientation\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSlotProps } from '@mui/base/utils';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      orientation = ownerState.orientation,\n      disabled = ownerState.disabled;\n  var slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\n\nvar TabScrollButtonRoot = styled(ButtonBase, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, ownerState.orientation && styles[ownerState.orientation]];\n  }\n})(function (_ref) {\n  var ownerState = _ref.ownerState;\n  return _extends(_defineProperty({\n    width: 40,\n    flexShrink: 0,\n    opacity: 0.8\n  }, \"&.\".concat(tabScrollButtonClasses.disabled), {\n    opacity: 0\n  }), ownerState.orientation === 'vertical' && {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: \"rotate(\".concat(ownerState.isRtl ? -90 : 90, \"deg)\")\n    }\n  });\n});\nvar TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  var _slots$StartScrollBut, _slots$EndScrollButto;\n\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n\n  var className = props.className,\n      _props$slots = props.slots,\n      slots = _props$slots === void 0 ? {} : _props$slots,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      direction = props.direction,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var isRtl = useRtl();\n\n  var ownerState = _extends({\n    isRtl: isRtl\n  }, props);\n\n  var classes = useUtilityClasses(ownerState);\n  var StartButtonIcon = (_slots$StartScrollBut = slots.StartScrollButtonIcon) != null ? _slots$StartScrollBut : KeyboardArrowLeft;\n  var EndButtonIcon = (_slots$EndScrollButto = slots.EndScrollButtonIcon) != null ? _slots$EndScrollButto : KeyboardArrowRight;\n  var startButtonIconProps = useSlotProps({\n    elementType: StartButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState: ownerState\n  });\n  var endButtonIconProps = useSlotProps({\n    elementType: EndButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _extends({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    ownerState: ownerState,\n    tabIndex: null\n  }, other, {\n    children: direction === 'left' ? /*#__PURE__*/_jsx(StartButtonIcon, _extends({}, startButtonIconProps)) : /*#__PURE__*/_jsx(EndButtonIcon, _extends({}, endButtonIconProps))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    EndScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TabScrollButton;","map":{"version":3,"sources":["C:/Projects/Mod_App_Front/node_modules/@mui/material/TabScrollButton/TabScrollButton.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","useSlotProps","composeClasses","useRtl","KeyboardArrowLeft","KeyboardArrowRight","ButtonBase","useThemeProps","styled","tabScrollButtonClasses","getTabScrollButtonUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","orientation","disabled","slots","root","TabScrollButtonRoot","name","slot","overridesResolver","props","styles","width","flexShrink","opacity","height","transform","isRtl","TabScrollButton","forwardRef","inProps","ref","_slots$StartScrollBut","_slots$EndScrollButto","className","slotProps","direction","other","StartButtonIcon","StartScrollButtonIcon","EndButtonIcon","EndScrollButtonIcon","startButtonIconProps","elementType","externalSlotProps","startScrollButtonIcon","additionalProps","fontSize","endButtonIconProps","endScrollButtonIcon","component","role","tabIndex","children","process","env","NODE_ENV","propTypes","node","object","string","oneOf","isRequired","bool","shape","oneOfType","func","sx","arrayOf"],"mappings":"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","sourcesContent":["'use client';\n\n/* eslint-disable jsx-a11y/aria-role */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"slots\", \"slotProps\", \"direction\", \"orientation\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSlotProps } from '@mui/base/utils';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\nconst TabScrollButtonRoot = styled(ButtonBase, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.orientation && styles[ownerState.orientation]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  width: 40,\n  flexShrink: 0,\n  opacity: 0.8,\n  [`&.${tabScrollButtonClasses.disabled}`]: {\n    opacity: 0\n  }\n}, ownerState.orientation === 'vertical' && {\n  width: '100%',\n  height: 40,\n  '& svg': {\n    transform: `rotate(${ownerState.isRtl ? -90 : 90}deg)`\n  }\n}));\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  var _slots$StartScrollBut, _slots$EndScrollButto;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n  const {\n      className,\n      slots = {},\n      slotProps = {},\n      direction\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isRtl = useRtl();\n  const ownerState = _extends({\n    isRtl\n  }, props);\n  const classes = useUtilityClasses(ownerState);\n  const StartButtonIcon = (_slots$StartScrollBut = slots.StartScrollButtonIcon) != null ? _slots$StartScrollBut : KeyboardArrowLeft;\n  const EndButtonIcon = (_slots$EndScrollButto = slots.EndScrollButtonIcon) != null ? _slots$EndScrollButto : KeyboardArrowRight;\n  const startButtonIconProps = useSlotProps({\n    elementType: StartButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState\n  });\n  const endButtonIconProps = useSlotProps({\n    elementType: EndButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _extends({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    ownerState: ownerState,\n    tabIndex: null\n  }, other, {\n    children: direction === 'left' ? /*#__PURE__*/_jsx(StartButtonIcon, _extends({}, startButtonIconProps)) : /*#__PURE__*/_jsx(EndButtonIcon, _extends({}, endButtonIconProps))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    EndScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TabScrollButton;"]},"metadata":{},"sourceType":"module"}