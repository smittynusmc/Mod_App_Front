{"ast":null,"code":"'use client';\n\nimport _defineProperty from \"C:/Projects/Mod_App_Front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _$concat, _$concat2, _mediaPointerFin, _$concat3, _$concat4, _styled;\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nvar _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionKey\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"slotProps\", \"value\"],\n    _excluded2 = [\"ref\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport { useAutocomplete, createFilterOptions } from '@mui/base';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport { styled, createUseThemeProps } from '../zero-styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nvar useThemeProps = createUseThemeProps('MuiAutocomplete');\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      disablePortal = ownerState.disablePortal,\n      expanded = ownerState.expanded,\n      focused = ownerState.focused,\n      fullWidth = ownerState.fullWidth,\n      hasClearIcon = ownerState.hasClearIcon,\n      hasPopupIcon = ownerState.hasPopupIcon,\n      inputFocused = ownerState.inputFocused,\n      popupOpen = ownerState.popupOpen,\n      size = ownerState.size;\n  var slots = {\n    root: ['root', expanded && 'expanded', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', \"tagSize\".concat(capitalize(size))],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nvar AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    var fullWidth = ownerState.fullWidth,\n        hasClearIcon = ownerState.hasClearIcon,\n        hasPopupIcon = ownerState.hasPopupIcon,\n        inputFocused = ownerState.inputFocused,\n        size = ownerState.size;\n    return [_defineProperty({}, \"& .\".concat(autocompleteClasses.tag), styles.tag), _defineProperty({}, \"& .\".concat(autocompleteClasses.tag), styles[\"tagSize\".concat(capitalize(size))]), _defineProperty({}, \"& .\".concat(autocompleteClasses.inputRoot), styles.inputRoot), _defineProperty({}, \"& .\".concat(autocompleteClasses.input), styles.input), _defineProperty({}, \"& .\".concat(autocompleteClasses.input), inputFocused && styles.inputFocused), styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})((_styled = {}, _defineProperty(_styled, \"& .\".concat(autocompleteClasses.tag), {\n  margin: 3,\n  maxWidth: 'calc(100% - 6px)'\n}), _defineProperty(_styled, \"& .\".concat(autocompleteClasses.inputRoot), (_$concat = {}, _defineProperty(_$concat, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n  paddingRight: 26 + 4\n}), _defineProperty(_$concat, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n  paddingRight: 52 + 4\n}), _defineProperty(_$concat, \"& .\".concat(autocompleteClasses.input), {\n  width: 0,\n  minWidth: 30\n}), _$concat)), _defineProperty(_styled, \"&.\".concat(autocompleteClasses.focused), (_$concat2 = {}, _defineProperty(_$concat2, \"& .\".concat(autocompleteClasses.clearIndicator), {\n  visibility: 'visible'\n}), _defineProperty(_$concat2, \"& .\".concat(autocompleteClasses.input), {\n  minWidth: 0\n}), _$concat2)), _defineProperty(_styled, '@media (pointer: fine)', (_mediaPointerFin = {}, _defineProperty(_mediaPointerFin, \"&:hover .\".concat(autocompleteClasses.clearIndicator), {\n  visibility: 'visible'\n}), _defineProperty(_mediaPointerFin, \"&:hover .\".concat(autocompleteClasses.input), {\n  minWidth: 0\n}), _mediaPointerFin)), _defineProperty(_styled, \"& .\".concat(inputClasses.root), {\n  paddingBottom: 1,\n  '& .MuiInput-input': {\n    padding: '4px 4px 4px 0px'\n  }\n}), _defineProperty(_styled, \"& .\".concat(inputClasses.root, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({}, \"& .\".concat(inputClasses.input), {\n  padding: '2px 4px 3px 0'\n})), _defineProperty(_styled, \"& .\".concat(outlinedInputClasses.root), (_$concat3 = {\n  padding: 9\n}, _defineProperty(_$concat3, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n  paddingRight: 26 + 4 + 9\n}), _defineProperty(_$concat3, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n  paddingRight: 52 + 4 + 9\n}), _defineProperty(_$concat3, \"& .\".concat(autocompleteClasses.input), {\n  padding: '7.5px 4px 7.5px 5px'\n}), _defineProperty(_$concat3, \"& .\".concat(autocompleteClasses.endAdornment), {\n  right: 9\n}), _$concat3)), _defineProperty(_styled, \"& .\".concat(outlinedInputClasses.root, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({\n  // Don't specify paddingRight, as it overrides the default value set when there is only\n  // one of the popup or clear icon as the specificity is equal so the latter one wins\n  paddingTop: 6,\n  paddingBottom: 6,\n  paddingLeft: 6\n}, \"& .\".concat(autocompleteClasses.input), {\n  padding: '2.5px 4px 2.5px 8px'\n})), _defineProperty(_styled, \"& .\".concat(filledInputClasses.root), (_$concat4 = {\n  paddingTop: 19,\n  paddingLeft: 8\n}, _defineProperty(_$concat4, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n  paddingRight: 26 + 4 + 9\n}), _defineProperty(_$concat4, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n  paddingRight: 52 + 4 + 9\n}), _defineProperty(_$concat4, \"& .\".concat(filledInputClasses.input), {\n  padding: '7px 4px'\n}), _defineProperty(_$concat4, \"& .\".concat(autocompleteClasses.endAdornment), {\n  right: 9\n}), _$concat4)), _defineProperty(_styled, \"& .\".concat(filledInputClasses.root, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({\n  paddingBottom: 1\n}, \"& .\".concat(filledInputClasses.input), {\n  padding: '2.5px 4px'\n})), _defineProperty(_styled, \"& .\".concat(inputBaseClasses.hiddenLabel), {\n  paddingTop: 8\n}), _defineProperty(_styled, \"& .\".concat(filledInputClasses.root, \".\").concat(inputBaseClasses.hiddenLabel), _defineProperty({\n  paddingTop: 0,\n  paddingBottom: 0\n}, \"& .\".concat(autocompleteClasses.input), {\n  paddingTop: 16,\n  paddingBottom: 17\n})), _defineProperty(_styled, \"& .\".concat(filledInputClasses.root, \".\").concat(inputBaseClasses.hiddenLabel, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({}, \"& .\".concat(autocompleteClasses.input), {\n  paddingTop: 8,\n  paddingBottom: 9\n})), _defineProperty(_styled, \"& .\".concat(autocompleteClasses.input), {\n  flexGrow: 1,\n  textOverflow: 'ellipsis',\n  opacity: 0\n}), _defineProperty(_styled, \"variants\", [{\n  props: {\n    fullWidth: true\n  },\n  style: {\n    width: '100%'\n  }\n}, {\n  props: {\n    size: 'small'\n  },\n  style: _defineProperty({}, \"& .\".concat(autocompleteClasses.tag), {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  })\n}, {\n  props: {\n    inputFocused: true\n  },\n  style: _defineProperty({}, \"& .\".concat(autocompleteClasses.input), {\n    opacity: 1\n  })\n}, {\n  props: {\n    multiple: true\n  },\n  style: _defineProperty({}, \"& .\".concat(autocompleteClasses.inputRoot), {\n    flexWrap: 'wrap'\n  })\n}]), _styled));\nvar AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.endAdornment;\n  }\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: '50%',\n  transform: 'translate(0, -50%)'\n});\nvar AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.clearIndicator;\n  }\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nvar AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: function overridesResolver(_ref6, styles) {\n    var ownerState = _ref6.ownerState;\n    return _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen);\n  }\n})({\n  padding: 2,\n  marginRight: -2,\n  variants: [{\n    props: {\n      popupOpen: true\n    },\n    style: {\n      transform: 'rotate(180deg)'\n    }\n  }]\n});\nvar AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [_defineProperty({}, \"& .\".concat(autocompleteClasses.option), styles.option), styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(function (_ref8) {\n  var theme = _ref8.theme;\n  return {\n    zIndex: (theme.vars || theme).zIndex.modal,\n    variants: [{\n      props: {\n        disablePortal: true\n      },\n      style: {\n        position: 'absolute'\n      }\n    }]\n  };\n});\nvar AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.paper;\n  }\n})(function (_ref9) {\n  var theme = _ref9.theme;\n  return _extends({}, theme.typography.body1, {\n    overflow: 'auto'\n  });\n});\nvar AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.loading;\n  }\n})(function (_ref10) {\n  var theme = _ref10.theme;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    padding: '14px 16px'\n  };\n});\nvar AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.noOptions;\n  }\n})(function (_ref11) {\n  var theme = _ref11.theme;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    padding: '14px 16px'\n  };\n});\nvar AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.listbox;\n  }\n})(function (_ref12) {\n  var _ariaSelectedTru, _$concat5;\n\n  var theme = _ref12.theme;\n  return _defineProperty({\n    listStyle: 'none',\n    margin: 0,\n    padding: '8px 0',\n    maxHeight: '40vh',\n    overflow: 'auto',\n    position: 'relative'\n  }, \"& .\".concat(autocompleteClasses.option), (_$concat5 = {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16\n  }, _defineProperty(_$concat5, theme.breakpoints.up('sm'), {\n    minHeight: 'auto'\n  }), _defineProperty(_$concat5, \"&.\".concat(autocompleteClasses.focused), {\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }), _defineProperty(_$concat5, '&[aria-disabled=\"true\"]', {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity,\n    pointerEvents: 'none'\n  }), _defineProperty(_$concat5, \"&.\".concat(autocompleteClasses.focusVisible), {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  }), _defineProperty(_$concat5, '&[aria-selected=\"true\"]', (_ariaSelectedTru = {\n    backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / \").concat(theme.vars.palette.action.selectedOpacity, \")\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n  }, _defineProperty(_ariaSelectedTru, \"&.\".concat(autocompleteClasses.focused), {\n    backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / calc(\").concat(theme.vars.palette.action.selectedOpacity, \" + \").concat(theme.vars.palette.action.hoverOpacity, \"))\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: (theme.vars || theme).palette.action.selected\n    }\n  }), _defineProperty(_ariaSelectedTru, \"&.\".concat(autocompleteClasses.focusVisible), {\n    backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / calc(\").concat(theme.vars.palette.action.selectedOpacity, \" + \").concat(theme.vars.palette.action.focusOpacity, \"))\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  }), _ariaSelectedTru)), _$concat5));\n});\nvar AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.groupLabel;\n  }\n})(function (_ref14) {\n  var theme = _ref14.theme;\n  return {\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    top: -8\n  };\n});\nvar AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.groupUl;\n  }\n})(_defineProperty({\n  padding: 0\n}, \"& .\".concat(autocompleteClasses.option), {\n  paddingLeft: 24\n}));\nexport { createFilterOptions };\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      className = props.className,\n      _props$clearIcon = props.clearIcon,\n      clearIcon = _props$clearIcon === void 0 ? _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n    fontSize: \"small\"\n  })) : _props$clearIcon,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      getOptionLabelProp = props.getOptionLabel,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponent = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})) : _props$popupIcon,\n      _props$readOnly = props.readOnly,\n      readOnly = _props$readOnly === void 0 ? false : _props$readOnly,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  var _useAutocomplete = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      expanded = _useAutocomplete.expanded,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  var _getInputProps = getInputProps(),\n      handleInputMouseDown = _getInputProps.onMouseDown;\n\n  var _ref15 = ListboxProps != null ? ListboxProps : {},\n      externalListboxRef = _ref15.ref;\n\n  var _getListboxProps = getListboxProps(),\n      listboxRef = _getListboxProps.ref,\n      otherListboxProps = _objectWithoutPropertiesLoose(_getListboxProps, _excluded2);\n\n  var combinedListboxRef = useForkRef(listboxRef, externalListboxRef);\n\n  var defaultGetOptionLabel = function defaultGetOptionLabel(option) {\n    var _option$label;\n\n    return (_option$label = option.label) != null ? _option$label : option;\n  };\n\n  var getOptionLabel = getOptionLabelProp || defaultGetOptionLabel; // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n\n  var ownerState = _extends({}, props, {\n    disablePortal: disablePortal,\n    expanded: expanded,\n    focused: focused,\n    fullWidth: fullWidth,\n    getOptionLabel: getOptionLabel,\n    hasClearIcon: hasClearIcon,\n    hasPopupIcon: hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen: popupOpen,\n    size: size\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: classes.tag,\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/_jsx(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/_jsxs(\"li\", {\n      children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n        className: classes.groupLabel,\n        ownerState: ownerState,\n        component: \"div\",\n        children: params.group\n      }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n        className: classes.groupUl,\n        ownerState: ownerState,\n        children: params.children\n      })]\n    }, params.key);\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n\n  var defaultRenderOption = function defaultRenderOption(props2, option) {\n    // Need to clearly apply key because of https://github.com/vercel/next.js/issues/55642\n    return /*#__PURE__*/_createElement(\"li\", _extends({}, props2, {\n      key: props2.key\n    }), getOptionLabel(option));\n  };\n\n  var renderOption = renderOptionProp || defaultRenderOption;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      index: index,\n      inputValue: inputValue\n    }, ownerState);\n  };\n\n  var clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  var paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  var popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  var popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n\n  var renderAutocompletePopperChildren = function renderAutocompletePopperChildren(children) {\n    return /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen\n    }, popperSlotProps, {\n      className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/_jsx(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, paperSlotProps, {\n        className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: children\n      }))\n    }));\n  };\n\n  var autocompletePopper = null;\n\n  if (groupedOptions.length > 0) {\n    autocompletePopper = renderAutocompletePopperChildren( /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n      as: ListboxComponent,\n      className: classes.listbox,\n      ownerState: ownerState\n    }, otherListboxProps, ListboxProps, {\n      ref: combinedListboxRef,\n      children: groupedOptions.map(function (option, index) {\n        if (groupBy) {\n          return renderGroup({\n            key: option.key,\n            group: option.group,\n            children: option.options.map(function (option2, index2) {\n              return renderListOption(option2, option.index + index2);\n            })\n          });\n        }\n\n        return renderListOption(option, index);\n      })\n    })));\n  } else if (loading && groupedOptions.length === 0) {\n    autocompletePopper = renderAutocompletePopperChildren( /*#__PURE__*/_jsx(AutocompleteLoading, {\n      className: classes.loading,\n      ownerState: ownerState,\n      children: loadingText\n    }));\n  } else if (groupedOptions.length === 0 && !freeSolo && !loading) {\n    autocompletePopper = renderAutocompletePopperChildren( /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n      className: classes.noOptions,\n      ownerState: ownerState,\n      role: \"presentation\",\n      onMouseDown: function onMouseDown(event) {\n        // Prevent input blur when interacting with the \"no options\" content\n        event.preventDefault();\n      },\n      children: noOptionsText\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id: id,\n        disabled: disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment: startAdornment,\n          onClick: function onClick(event) {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          }\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps, {\n              className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps, {\n              className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled: disabled,\n          readOnly: readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? autocompletePopper : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * If `true`, the portion of the selected suggestion that the user hasn't typed,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   *\n   * When using the `freeSolo` mode, the typed value will be the input value\n   * if the Autocomplete loses focus without highlighting an option.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set it to `true` if you want to help the user enter a new value.\n   * Set it to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, function (props) {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', \"However, \".concat(props.defaultValue, \" was provided.\")].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {Value[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {Value[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {Value} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the key for a given option.\n   * This can be useful when the labels of options are not unique (since labels are used as keys by default).\n   *\n   * @param {Value} option The option to get the key for.\n   * @returns {string | number}\n   */\n  getOptionKey: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {Value} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {Value} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {Value} option The option to test.\n   * @param {Value} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, for example `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value|Value[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {Value} option The option to render.\n   * @param {object} state The state of each option.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {Value[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, function (props) {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', \"However, \".concat(props.value, \" was provided.\")].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","map":{"version":3,"sources":["C:/Projects/Mod_App_Front/node_modules/@mui/material/Autocomplete/Autocomplete.js"],"names":["_objectWithoutPropertiesLoose","_extends","_ClearIcon","_ArrowDropDownIcon","_excluded","_excluded2","React","PropTypes","clsx","integerPropType","chainPropTypes","useAutocomplete","createFilterOptions","composeClasses","alpha","Popper","ListSubheader","Paper","IconButton","Chip","inputClasses","inputBaseClasses","outlinedInputClasses","filledInputClasses","ClearIcon","ArrowDropDownIcon","styled","createUseThemeProps","autocompleteClasses","getAutocompleteUtilityClass","capitalize","useForkRef","jsx","_jsx","jsxs","_jsxs","createElement","_createElement","useThemeProps","useUtilityClasses","ownerState","classes","disablePortal","expanded","focused","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","popupOpen","size","slots","root","inputRoot","input","tag","endAdornment","clearIndicator","popupIndicator","popper","paper","listbox","loading","noOptions","option","groupLabel","groupUl","AutocompleteRoot","name","slot","overridesResolver","props","styles","margin","maxWidth","paddingRight","width","minWidth","visibility","paddingBottom","padding","sizeSmall","right","paddingTop","paddingLeft","hiddenLabel","flexGrow","textOverflow","opacity","style","multiple","flexWrap","AutocompleteEndAdornment","position","top","transform","AutocompleteClearIndicator","marginRight","AutocompletePopupIndicator","popupIndicatorOpen","variants","AutocompletePopper","popperDisablePortal","theme","zIndex","vars","modal","AutocompletePaper","typography","body1","overflow","AutocompleteLoading","color","palette","text","secondary","AutocompleteNoOptions","AutocompleteListbox","listStyle","maxHeight","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","breakpoints","up","backgroundColor","action","hover","disabledOpacity","pointerEvents","focusVisible","focus","primary","mainChannel","selectedOpacity","main","hoverOpacity","selected","focusOpacity","AutocompleteGroupLabel","background","AutocompleteGroupUl","Autocomplete","forwardRef","inProps","ref","_slotProps$clearIndic","_slotProps$paper","_slotProps$popper","_slotProps$popupIndic","autoComplete","autoHighlight","autoSelect","blurOnSelect","ChipProps","className","clearIcon","fontSize","clearOnBlur","freeSolo","clearOnEscape","clearText","closeText","componentsProps","defaultValue","disableClearable","disableCloseOnSelect","disabled","disabledItemsFocusable","disableListWrap","filterSelectedOptions","forcePopupIcon","getLimitTagsText","more","getOptionLabelProp","getOptionLabel","groupBy","handleHomeEndKeys","includeInputInList","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openOnFocus","openText","PaperComponent","PopperComponent","popupIcon","readOnly","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","selectOnFocus","slotProps","other","componentName","getRootProps","getInputProps","getInputLabelProps","getPopupIndicatorProps","getClearProps","getTagProps","getListboxProps","getOptionProps","value","dirty","id","focusedTag","anchorEl","setAnchorEl","inputValue","groupedOptions","handleInputMouseDown","onMouseDown","externalListboxRef","_getListboxProps","listboxRef","otherListboxProps","combinedListboxRef","defaultGetOptionLabel","_option$label","label","startAdornment","length","getCustomizedTagProps","params","map","index","Array","isArray","splice","push","children","defaultRenderGroup","component","group","key","defaultRenderOption","props2","renderListOption","optionProps","clearIndicatorSlotProps","paperSlotProps","popperSlotProps","popupIndicatorSlotProps","renderAutocompletePopperChildren","as","clientWidth","role","open","autocompletePopper","options","option2","index2","event","preventDefault","Fragment","undefined","InputLabelProps","InputProps","onClick","target","currentTarget","title","inputProps","process","env","NODE_ENV","propTypes","bool","oneOfType","oneOf","object","string","node","shape","any","Error","join","filterOptions","func","getOptionDisabled","getOptionKey","isOptionEqualToValue","elementType","onChange","onClose","onHighlightChange","onInputChange","onKeyDown","onOpen","array","isRequired","sx","arrayOf"],"mappings":"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","sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _ClearIcon, _ArrowDropDownIcon;\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionKey\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"slotProps\", \"value\"],\n  _excluded2 = [\"ref\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport { useAutocomplete, createFilterOptions } from '@mui/base';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport { styled, createUseThemeProps } from '../zero-styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useThemeProps = createUseThemeProps('MuiAutocomplete');\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})({\n  [`& .${autocompleteClasses.tag}`]: {\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  },\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`&.${autocompleteClasses.focused}`]: {\n    [`& .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      minWidth: 0\n    }\n  },\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    },\n    [`&:hover .${autocompleteClasses.input}`]: {\n      minWidth: 0\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 5px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 8px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 16,\n      paddingBottom: 17\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 8,\n      paddingBottom: 9\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: {\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  },\n  variants: [{\n    props: {\n      fullWidth: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      [`& .${autocompleteClasses.tag}`]: {\n        margin: 2,\n        maxWidth: 'calc(100% - 4px)'\n      }\n    }\n  }, {\n    props: {\n      inputFocused: true\n    },\n    style: {\n      [`& .${autocompleteClasses.input}`]: {\n        opacity: 1\n      }\n    }\n  }, {\n    props: {\n      multiple: true\n    },\n    style: {\n      [`& .${autocompleteClasses.inputRoot}`]: {\n        flexWrap: 'wrap'\n      }\n    }\n  }]\n});\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: '50%',\n  transform: 'translate(0, -50%)'\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})({\n  padding: 2,\n  marginRight: -2,\n  variants: [{\n    props: {\n      popupOpen: true\n    },\n    style: {\n      transform: 'rotate(180deg)'\n    }\n  }]\n});\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme\n}) => ({\n  zIndex: (theme.vars || theme).zIndex.modal,\n  variants: [{\n    props: {\n      disablePortal: true\n    },\n    style: {\n      position: 'absolute'\n    }\n  }]\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  position: 'relative',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n      autoComplete = false,\n      autoHighlight = false,\n      autoSelect = false,\n      blurOnSelect = false,\n      ChipProps,\n      className,\n      clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n        fontSize: \"small\"\n      })),\n      clearOnBlur = !props.freeSolo,\n      clearOnEscape = false,\n      clearText = 'Clear',\n      closeText = 'Close',\n      componentsProps = {},\n      defaultValue = props.multiple ? [] : null,\n      disableClearable = false,\n      disableCloseOnSelect = false,\n      disabled = false,\n      disabledItemsFocusable = false,\n      disableListWrap = false,\n      disablePortal = false,\n      filterSelectedOptions = false,\n      forcePopupIcon = 'auto',\n      freeSolo = false,\n      fullWidth = false,\n      getLimitTagsText = more => `+${more}`,\n      getOptionLabel: getOptionLabelProp,\n      groupBy,\n      handleHomeEndKeys = !props.freeSolo,\n      includeInputInList = false,\n      limitTags = -1,\n      ListboxComponent = 'ul',\n      ListboxProps,\n      loading = false,\n      loadingText = 'Loading…',\n      multiple = false,\n      noOptionsText = 'No options',\n      openOnFocus = false,\n      openText = 'Open',\n      PaperComponent = Paper,\n      PopperComponent = Popper,\n      popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n      readOnly = false,\n      renderGroup: renderGroupProp,\n      renderInput,\n      renderOption: renderOptionProp,\n      renderTags,\n      selectOnFocus = !props.freeSolo,\n      size = 'medium',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    expanded,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  const {\n    onMouseDown: handleInputMouseDown\n  } = getInputProps();\n  const {\n    ref: externalListboxRef\n  } = ListboxProps != null ? ListboxProps : {};\n  const _getListboxProps = getListboxProps(),\n    {\n      ref: listboxRef\n    } = _getListboxProps,\n    otherListboxProps = _objectWithoutPropertiesLoose(_getListboxProps, _excluded2);\n  const combinedListboxRef = useForkRef(listboxRef, externalListboxRef);\n  const defaultGetOptionLabel = option => {\n    var _option$label;\n    return (_option$label = option.label) != null ? _option$label : option;\n  };\n  const getOptionLabel = getOptionLabelProp || defaultGetOptionLabel;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    getOptionLabel,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: classes.tag,\n      disabled\n    }, getTagProps(params));\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => {\n    // Need to clearly apply key because of https://github.com/vercel/next.js/issues/55642\n    return /*#__PURE__*/_createElement(\"li\", _extends({}, props2, {\n      key: props2.key\n    }), getOptionLabel(option));\n  };\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    }, ownerState);\n  };\n  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  const renderAutocompletePopperChildren = children => /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n    as: PopperComponent,\n    disablePortal: disablePortal,\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    ownerState: ownerState,\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: popupOpen\n  }, popperSlotProps, {\n    className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n    children: /*#__PURE__*/_jsx(AutocompletePaper, _extends({\n      ownerState: ownerState,\n      as: PaperComponent\n    }, paperSlotProps, {\n      className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n      children: children\n    }))\n  }));\n  let autocompletePopper = null;\n  if (groupedOptions.length > 0) {\n    autocompletePopper = renderAutocompletePopperChildren( /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n      as: ListboxComponent,\n      className: classes.listbox,\n      ownerState: ownerState\n    }, otherListboxProps, ListboxProps, {\n      ref: combinedListboxRef,\n      children: groupedOptions.map((option, index) => {\n        if (groupBy) {\n          return renderGroup({\n            key: option.key,\n            group: option.group,\n            children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n          });\n        }\n        return renderListOption(option, index);\n      })\n    })));\n  } else if (loading && groupedOptions.length === 0) {\n    autocompletePopper = renderAutocompletePopperChildren( /*#__PURE__*/_jsx(AutocompleteLoading, {\n      className: classes.loading,\n      ownerState: ownerState,\n      children: loadingText\n    }));\n  } else if (groupedOptions.length === 0 && !freeSolo && !loading) {\n    autocompletePopper = renderAutocompletePopperChildren( /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n      className: classes.noOptions,\n      ownerState: ownerState,\n      role: \"presentation\",\n      onMouseDown: event => {\n        // Prevent input blur when interacting with the \"no options\" content\n        event.preventDefault();\n      },\n      children: noOptionsText\n    }));\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          onClick: event => {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          }\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps, {\n              className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps, {\n              className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? autocompletePopper : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the portion of the selected suggestion that the user hasn't typed,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   *\n   * When using the `freeSolo` mode, the typed value will be the input value\n   * if the Autocomplete loses focus without highlighting an option.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set it to `true` if you want to help the user enter a new value.\n   * Set it to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {Value[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {Value[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {Value} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the key for a given option.\n   * This can be useful when the labels of options are not unique (since labels are used as keys by default).\n   *\n   * @param {Value} option The option to get the key for.\n   * @returns {string | number}\n   */\n  getOptionKey: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {Value} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {Value} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {Value} option The option to test.\n   * @param {Value} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, for example `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value|Value[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {Value} option The option to render.\n   * @param {object} state The state of each option.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {Value[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}