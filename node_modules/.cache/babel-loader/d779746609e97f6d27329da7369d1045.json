{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{TextField,Button,Select,MenuItem,InputLabel,FormControl,Typography,Container,Paper,List,ListItem,ListItemText,CircularProgress}from\"@mui/material\";import\"./YouTubeComments.css\";const YouTubeComments=()=>{const[videoId,setVideoId]=useState(\"\");const[commentAuthors,setCommentAuthors]=useState([]);const[accessToken,setAccessToken]=useState(\"\");const[maxResults,setMaxResults]=useState(10);const[error,setError]=useState(null);const[loading,setLoading]=useState(false);useEffect(()=>{const urlParams=new URLSearchParams(window.location.search);const token=urlParams.get(\"access_token\");const videoIdParam=urlParams.get(\"videoId\");const maxResultsParam=urlParams.get(\"maxResults\");if(token){setAccessToken(token);if(videoIdParam)setVideoId(videoIdParam);if(maxResultsParam)setMaxResults(Number(maxResultsParam));fetchComments(token,videoIdParam,maxResultsParam);}},[]);const extractVideoId=input=>{try{const urlObj=new URL(input);const params=new URLSearchParams(urlObj.search);if(params.has(\"v\")){return params.get(\"v\");}const pathname=urlObj.pathname;if(pathname.startsWith(\"/embed/\")){return pathname.split(\"/embed/\")[1];}if(pathname.startsWith(\"/v/\")){return pathname.split(\"/v/\")[1];}if(pathname.startsWith(\"/watch\")){return params.get(\"v\");}return input;}catch(e){return input;}};const handleAuth=async(videoId,maxResults)=>{const state=btoa(JSON.stringify({videoId,maxResults}));window.location.href=\"https://youtube-comments-backend-23opjzqi7q-uc.a.run.app/auth/google?state=\".concat(state);};const fetchComments=async(token,videoId,maxResults)=>{setError(null);setLoading(true);try{const response=await axios.post(\"https://youtube-comments-backend-23opjzqi7q-uc.a.run.app/youtube/comments\",{videoId:videoId||extractVideoId(videoId),accessToken:token||accessToken,maxResults});const commentThreads=response.data;const authors=commentThreads.flatMap(thread=>[thread.snippet.topLevelComment.snippet.authorDisplayName,...(thread.replies?thread.replies.comments.map(reply=>reply.snippet.authorDisplayName):[])]);setCommentAuthors(authors);setLoading(false);}catch(error){console.error(\"Error fetching comment threads\",error);if(error.response&&error.response.status===401){setError(\"Session expired. Please re-authenticate.\");handleAuth(videoId,maxResults);}else if(error.response&&error.response.status===404){setError(\"Video not found\");}else{setError(\"Failed to fetch comments. Please try again.\");}setLoading(false);}};const handleFetchComments=async()=>{if(!accessToken){await handleAuth(videoId,maxResults);}else{await fetchComments(accessToken,videoId,maxResults);}};const selectWinner=()=>{if(commentAuthors.length===0)return;const winner=commentAuthors[Math.floor(Math.random()*commentAuthors.length)];alert(\"The winner is: \".concat(winner));};return/*#__PURE__*/React.createElement(Container,{component:Paper,elevation:3,sx:{padding:4,marginTop:4}},/*#__PURE__*/React.createElement(Typography,{variant:\"h5\",gutterBottom:true},\"YouTube Comment Picker\"),/*#__PURE__*/React.createElement(TextField,{fullWidth:true,label:\"YouTube Video URL or ID\",variant:\"outlined\",value:videoId,onChange:e=>setVideoId(e.target.value),margin:\"normal\"}),/*#__PURE__*/React.createElement(FormControl,{fullWidth:true,variant:\"outlined\",margin:\"normal\"},/*#__PURE__*/React.createElement(InputLabel,null,\"Max Results\"),/*#__PURE__*/React.createElement(Select,{value:maxResults,onChange:e=>setMaxResults(Number(e.target.value)),label:\"Max Results\"},/*#__PURE__*/React.createElement(MenuItem,{value:10},\"10\"),/*#__PURE__*/React.createElement(MenuItem,{value:15},\"15\"),/*#__PURE__*/React.createElement(MenuItem,{value:25},\"25\"),/*#__PURE__*/React.createElement(MenuItem,{value:50},\"50\"),/*#__PURE__*/React.createElement(MenuItem,{value:100},\"100\"))),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:handleFetchComments,disabled:loading},\"Fetch Comments\"),loading&&/*#__PURE__*/React.createElement(CircularProgress,{sx:{marginTop:2}}),error&&/*#__PURE__*/React.createElement(Typography,{color:\"error\",sx:{marginTop:2}},error),/*#__PURE__*/React.createElement(List,{sx:{marginTop:2,maxHeight:400,overflow:\"auto\"}},commentAuthors.map((author,index)=>/*#__PURE__*/React.createElement(ListItem,{key:index},/*#__PURE__*/React.createElement(ListItemText,{primary:author})))),commentAuthors.length>0&&/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"secondary\",onClick:selectWinner,sx:{marginTop:2}},\"Select Winner\"));};export default YouTubeComments;","map":{"version":3,"names":["React","useState","useEffect","axios","TextField","Button","Select","MenuItem","InputLabel","FormControl","Typography","Container","Paper","List","ListItem","ListItemText","CircularProgress","YouTubeComments","videoId","setVideoId","commentAuthors","setCommentAuthors","accessToken","setAccessToken","maxResults","setMaxResults","error","setError","loading","setLoading","urlParams","URLSearchParams","window","location","search","token","get","videoIdParam","maxResultsParam","Number","fetchComments","extractVideoId","input","urlObj","URL","params","has","pathname","startsWith","split","e","handleAuth","state","btoa","JSON","stringify","href","concat","response","post","commentThreads","data","authors","flatMap","thread","snippet","topLevelComment","authorDisplayName","replies","comments","map","reply","console","status","handleFetchComments","selectWinner","length","winner","Math","floor","random","alert","createElement","component","elevation","sx","padding","marginTop","variant","gutterBottom","fullWidth","label","value","onChange","target","margin","color","onClick","disabled","maxHeight","overflow","author","index","key","primary"],"sources":["C:/Projects/Mod_App_Front/src/components/YouTubeComments.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Typography,\r\n  Container,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport \"./YouTubeComments.css\";\r\n\r\nconst YouTubeComments = () => {\r\n  const [videoId, setVideoId] = useState(\"\");\r\n  const [commentAuthors, setCommentAuthors] = useState([]);\r\n  const [accessToken, setAccessToken] = useState(\"\");\r\n  const [maxResults, setMaxResults] = useState(10);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const token = urlParams.get(\"access_token\");\r\n    const videoIdParam = urlParams.get(\"videoId\");\r\n    const maxResultsParam = urlParams.get(\"maxResults\");\r\n\r\n    if (token) {\r\n      setAccessToken(token);\r\n      if (videoIdParam) setVideoId(videoIdParam);\r\n      if (maxResultsParam) setMaxResults(Number(maxResultsParam));\r\n      fetchComments(token, videoIdParam, maxResultsParam);\r\n    }\r\n  }, []);\r\n\r\n  const extractVideoId = (input) => {\r\n    try {\r\n      const urlObj = new URL(input);\r\n      const params = new URLSearchParams(urlObj.search);\r\n      if (params.has(\"v\")) {\r\n        return params.get(\"v\");\r\n      }\r\n      const pathname = urlObj.pathname;\r\n      if (pathname.startsWith(\"/embed/\")) {\r\n        return pathname.split(\"/embed/\")[1];\r\n      }\r\n      if (pathname.startsWith(\"/v/\")) {\r\n        return pathname.split(\"/v/\")[1];\r\n      }\r\n      if (pathname.startsWith(\"/watch\")) {\r\n        return params.get(\"v\");\r\n      }\r\n      return input;\r\n    } catch (e) {\r\n      return input;\r\n    }\r\n  };\r\n\r\n  const handleAuth = async (videoId, maxResults) => {\r\n    const state = btoa(JSON.stringify({ videoId, maxResults }));\r\n    window.location.href = `https://youtube-comments-backend-23opjzqi7q-uc.a.run.app/auth/google?state=${state}`;\r\n  };\r\n\r\n  const fetchComments = async (token, videoId, maxResults) => {\r\n    setError(null);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://youtube-comments-backend-23opjzqi7q-uc.a.run.app/youtube/comments\",\r\n        {\r\n          videoId: videoId || extractVideoId(videoId),\r\n          accessToken: token || accessToken,\r\n          maxResults,\r\n        }\r\n      );\r\n      const commentThreads = response.data;\r\n      const authors = commentThreads.flatMap((thread) => [\r\n        thread.snippet.topLevelComment.snippet.authorDisplayName,\r\n        ...(thread.replies\r\n          ? thread.replies.comments.map(\r\n              (reply) => reply.snippet.authorDisplayName\r\n            )\r\n          : []),\r\n      ]);\r\n      setCommentAuthors(authors);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching comment threads\", error);\r\n      if (error.response && error.response.status === 401) {\r\n        setError(\"Session expired. Please re-authenticate.\");\r\n        handleAuth(videoId, maxResults);\r\n      } else if (error.response && error.response.status === 404) {\r\n        setError(\"Video not found\");\r\n      } else {\r\n        setError(\"Failed to fetch comments. Please try again.\");\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFetchComments = async () => {\r\n    if (!accessToken) {\r\n      await handleAuth(videoId, maxResults);\r\n    } else {\r\n      await fetchComments(accessToken, videoId, maxResults);\r\n    }\r\n  };\r\n\r\n  const selectWinner = () => {\r\n    if (commentAuthors.length === 0) return;\r\n    const winner =\r\n      commentAuthors[Math.floor(Math.random() * commentAuthors.length)];\r\n    alert(`The winner is: ${winner}`);\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      component={Paper}\r\n      elevation={3}\r\n      sx={{ padding: 4, marginTop: 4 }}\r\n    >\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        YouTube Comment Picker\r\n      </Typography>\r\n      <TextField\r\n        fullWidth\r\n        label=\"YouTube Video URL or ID\"\r\n        variant=\"outlined\"\r\n        value={videoId}\r\n        onChange={(e) => setVideoId(e.target.value)}\r\n        margin=\"normal\"\r\n      />\r\n      <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\r\n        <InputLabel>Max Results</InputLabel>\r\n        <Select\r\n          value={maxResults}\r\n          onChange={(e) => setMaxResults(Number(e.target.value))}\r\n          label=\"Max Results\"\r\n        >\r\n          <MenuItem value={10}>10</MenuItem>\r\n          <MenuItem value={15}>15</MenuItem>\r\n          <MenuItem value={25}>25</MenuItem>\r\n          <MenuItem value={50}>50</MenuItem>\r\n          <MenuItem value={100}>100</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleFetchComments}\r\n        disabled={loading}\r\n      >\r\n        Fetch Comments\r\n      </Button>\r\n      {loading && <CircularProgress sx={{ marginTop: 2 }} />}\r\n      {error && (\r\n        <Typography color=\"error\" sx={{ marginTop: 2 }}>\r\n          {error}\r\n        </Typography>\r\n      )}\r\n      <List sx={{ marginTop: 2, maxHeight: 400, overflow: \"auto\" }}>\r\n        {commentAuthors.map((author, index) => (\r\n          <ListItem key={index}>\r\n            <ListItemText primary={author} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      {commentAuthors.length > 0 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={selectWinner}\r\n          sx={{ marginTop: 2 }}\r\n        >\r\n          Select Winner\r\n        </Button>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default YouTubeComments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}