{"ast":null,"code":"'use client';\n\nimport _defineProperty from \"C:/Projects/Mod_App_Front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"renderSurplus\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SPACINGS = {\n  small: -16,\n  medium: null\n};\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\n\nvar AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return _extends(_defineProperty({}, \"& .\".concat(avatarGroupClasses.avatar), styles.avatar), styles.root);\n  }\n})(function (_ref) {\n  var _ref2;\n\n  var theme = _ref.theme,\n      ownerState = _ref.ownerState;\n  var marginValue = ownerState.spacing && SPACINGS[ownerState.spacing] !== undefined ? SPACINGS[ownerState.spacing] : -ownerState.spacing;\n  return _ref2 = {}, _defineProperty(_ref2, \"& .\".concat(avatarClasses.root), {\n    border: \"2px solid \".concat((theme.vars || theme).palette.background.default),\n    boxSizing: 'content-box',\n    marginLeft: marginValue != null ? marginValue : -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  }), _defineProperty(_ref2, \"display\", 'flex'), _defineProperty(_ref2, \"flexDirection\", 'row-reverse'), _ref2;\n});\nvar AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n\n  var childrenProp = props.children,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'div' : _props$component,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 5 : _props$max,\n      renderSurplus = props.renderSurplus,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 'medium' : _props$spacing,\n      total = props.total,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circular' : _props$variant,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var clampedMax = max < 2 ? 2 : max;\n\n  var ownerState = _extends({}, props, {\n    max: max,\n    spacing: spacing,\n    component: component,\n    variant: variant\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var children = React.Children.toArray(childrenProp).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  var totalAvatars = total || children.length;\n\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  var maxAvatars = Math.min(children.length, clampedMax - 1);\n  var extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  var extraAvatarsElement = renderSurplus ? renderSurplus(extraAvatars) : \"+\".concat(extraAvatars);\n  var additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsx(Avatar, _extends({\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      children: extraAvatarsElement\n    })) : null, children.slice(0, maxAvatars).reverse().map(function (child) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, function (props) {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * custom renderer of extraAvatars\n   * @param {number} surplus number of extra avatars\n   * @returns {React.ReactNode} custom element to display\n   */\n  renderSurplus: PropTypes.func,\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","map":{"version":3,"sources":["C:/Projects/Mod_App_Front/node_modules/@mui/material/AvatarGroup/AvatarGroup.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","isFragment","clsx","chainPropTypes","composeClasses","styled","useThemeProps","Avatar","avatarClasses","avatarGroupClasses","getAvatarGroupUtilityClass","jsx","_jsx","jsxs","_jsxs","SPACINGS","small","medium","useUtilityClasses","ownerState","classes","slots","root","avatar","AvatarGroupRoot","name","slot","overridesResolver","props","styles","theme","marginValue","spacing","undefined","border","vars","palette","background","default","boxSizing","marginLeft","AvatarGroup","forwardRef","inProps","ref","_slotProps$additional","childrenProp","children","className","component","componentsProps","max","renderSurplus","slotProps","total","variant","other","clampedMax","Children","toArray","filter","child","process","env","NODE_ENV","console","error","join","isValidElement","totalAvatars","length","Math","min","maxAvatars","extraAvatars","extraAvatarsElement","additionalAvatarSlotProps","additionalAvatar","as","slice","reverse","map","cloneElement","propTypes","node","object","string","elementType","shape","number","Error","func","oneOfType","oneOf","sx","arrayOf","bool"],"mappings":"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","sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"renderSurplus\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme,\n  ownerState\n}) => {\n  const marginValue = ownerState.spacing && SPACINGS[ownerState.spacing] !== undefined ? SPACINGS[ownerState.spacing] : -ownerState.spacing;\n  return {\n    [`& .${avatarClasses.root}`]: {\n      border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n      boxSizing: 'content-box',\n      marginLeft: marginValue != null ? marginValue : -8,\n      '&:last-child': {\n        marginLeft: 0\n      }\n    },\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  };\n});\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n      children: childrenProp,\n      className,\n      component = 'div',\n      componentsProps = {},\n      max = 5,\n      renderSurplus,\n      slotProps = {},\n      spacing = 'medium',\n      total,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const extraAvatarsElement = renderSurplus ? renderSurplus(extraAvatars) : `+${extraAvatars}`;\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsx(Avatar, _extends({\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      children: extraAvatarsElement\n    })) : null, children.slice(0, maxAvatars).reverse().map(child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * custom renderer of extraAvatars\n   * @param {number} surplus number of extra avatars\n   * @returns {React.ReactNode} custom element to display\n   */\n  renderSurplus: PropTypes.func,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;"]},"metadata":{},"sourceType":"module"}