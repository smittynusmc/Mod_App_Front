{"ast":null,"code":"import React,{useEffect,useRef,useState}from\"react\";import SpinWheel from\"./SpinWheel\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Wheel=_ref=>{let{mustStartSpinning,prizeNumber,data,onStopSpinning}=_ref;const canvasRef=useRef(null);const[isSpinning,setIsSpinning]=useState(false);useEffect(()=>{if(canvasRef.current){const wheel=new SpinWheel(\"spinCanvas\",data,winner=>{setIsSpinning(false);onStopSpinning(winner);});return()=>{// Clean up if necessary\n};}},[canvasRef,data,onStopSpinning]);const handleSpinClick=()=>{if(!isSpinning&&mustStartSpinning){setIsSpinning(true);document.getElementById(\"spinCanvas\").click();}};useEffect(()=>{handleSpinClick();},[mustStartSpinning]);return/*#__PURE__*/_jsxs(\"div\",{id:\"wheel\",children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,id:\"spinCanvas\",width:\"600\",height:\"600\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSpinClick,disabled:isSpinning,children:\"Spin\"})]});};export default Wheel;","map":{"version":3,"names":["React","useEffect","useRef","useState","SpinWheel","jsx","_jsx","jsxs","_jsxs","Wheel","_ref","mustStartSpinning","prizeNumber","data","onStopSpinning","canvasRef","isSpinning","setIsSpinning","current","wheel","winner","handleSpinClick","document","getElementById","click","id","children","ref","width","height","onClick","disabled"],"sources":["C:/Projects/Mod_App_Front/src/components/Wheel.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport SpinWheel from \"./SpinWheel\";\r\n\r\nconst Wheel = ({ mustStartSpinning, prizeNumber, data, onStopSpinning }) => {\r\n  const canvasRef = useRef(null);\r\n  const [isSpinning, setIsSpinning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const wheel = new SpinWheel(\"spinCanvas\", data, (winner) => {\r\n        setIsSpinning(false);\r\n        onStopSpinning(winner);\r\n      });\r\n\r\n      return () => {\r\n        // Clean up if necessary\r\n      };\r\n    }\r\n  }, [canvasRef, data, onStopSpinning]);\r\n\r\n  const handleSpinClick = () => {\r\n    if (!isSpinning && mustStartSpinning) {\r\n      setIsSpinning(true);\r\n      document.getElementById(\"spinCanvas\").click();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleSpinClick();\r\n  }, [mustStartSpinning]);\r\n\r\n  return (\r\n    <div id=\"wheel\">\r\n      <canvas ref={canvasRef} id=\"spinCanvas\" width=\"600\" height=\"600\" />\r\n      <button onClick={handleSpinClick} disabled={isSpinning}>\r\n        Spin\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wheel;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC1D,MAAO,CAAAC,SAAS,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpC,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAA8D,IAA7D,CAAEC,iBAAiB,CAAEC,WAAW,CAAEC,IAAI,CAAEC,cAAe,CAAC,CAAAJ,IAAA,CACrE,KAAM,CAAAK,SAAS,CAAGb,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAACc,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAEnDF,SAAS,CAAC,IAAM,CACd,GAAIc,SAAS,CAACG,OAAO,CAAE,CACrB,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAf,SAAS,CAAC,YAAY,CAAES,IAAI,CAAGO,MAAM,EAAK,CAC1DH,aAAa,CAAC,KAAK,CAAC,CACpBH,cAAc,CAACM,MAAM,CAAC,CACxB,CAAC,CAAC,CAEF,MAAO,IAAM,CACX;AAAA,CACD,CACH,CACF,CAAC,CAAE,CAACL,SAAS,CAAEF,IAAI,CAAEC,cAAc,CAAC,CAAC,CAErC,KAAM,CAAAO,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAI,CAACL,UAAU,EAAIL,iBAAiB,CAAE,CACpCM,aAAa,CAAC,IAAI,CAAC,CACnBK,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK,CAAC,CAAC,CAC/C,CACF,CAAC,CAEDvB,SAAS,CAAC,IAAM,CACdoB,eAAe,CAAC,CAAC,CACnB,CAAC,CAAE,CAACV,iBAAiB,CAAC,CAAC,CAEvB,mBACEH,KAAA,QAAKiB,EAAE,CAAC,OAAO,CAAAC,QAAA,eACbpB,IAAA,WAAQqB,GAAG,CAAEZ,SAAU,CAACU,EAAE,CAAC,YAAY,CAACG,KAAK,CAAC,KAAK,CAACC,MAAM,CAAC,KAAK,CAAE,CAAC,cACnEvB,IAAA,WAAQwB,OAAO,CAAET,eAAgB,CAACU,QAAQ,CAAEf,UAAW,CAAAU,QAAA,CAAC,MAExD,CAAQ,CAAC,EACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}