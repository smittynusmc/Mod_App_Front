{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../useButton';\nimport { useListItem } from '../useList';\nimport { DropdownActionTypes } from '../useDropdown';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\nimport { useCompoundItem } from '../useCompound';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\n\nfunction idGenerator(existingKeys) {\n  return \"menu-item-\".concat(existingKeys.size);\n}\n\nvar FALLBACK_MENU_CONTEXT = {\n  dispatch: function dispatch() {},\n  popupId: '',\n  registerPopup: function registerPopup() {},\n  registerTrigger: function registerTrigger() {},\n  state: {\n    open: true,\n    changeReason: null\n  },\n  triggerElement: null\n};\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuItem API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu-item)\n */\n\nexport function useMenuItem(params) {\n  var _React$useContext;\n\n  var _params$disabled = params.disabled,\n      disabled = _params$disabled === void 0 ? false : _params$disabled,\n      idParam = params.id,\n      externalRef = params.rootRef,\n      label = params.label,\n      _params$disableFocusO = params.disableFocusOnHover,\n      disableFocusOnHover = _params$disableFocusO === void 0 ? false : _params$disableFocusO;\n  var id = useId(idParam);\n  var itemRef = React.useRef(null);\n  var itemMetadata = React.useMemo(function () {\n    return {\n      disabled: disabled,\n      id: id != null ? id : '',\n      label: label,\n      ref: itemRef\n    };\n  }, [disabled, id, label]);\n\n  var _ref = (_React$useContext = React.useContext(DropdownContext)) != null ? _React$useContext : FALLBACK_MENU_CONTEXT,\n      dispatch = _ref.dispatch;\n\n  var _useListItem = useListItem({\n    item: id,\n    handlePointerOverEvents: !disableFocusOnHover\n  }),\n      getListRootProps = _useListItem.getRootProps,\n      highlighted = _useListItem.highlighted;\n\n  var _useCompoundItem = useCompoundItem(id != null ? id : idGenerator, itemMetadata),\n      index = _useCompoundItem.index,\n      totalItemCount = _useCompoundItem.totalItemCount;\n\n  var _useButton = useButton({\n    disabled: disabled,\n    focusableWhenDisabled: true\n  }),\n      getButtonProps = _useButton.getRootProps,\n      focusVisible = _useButton.focusVisible,\n      buttonRefHandler = _useButton.rootRef;\n\n  var handleRef = useForkRef(buttonRefHandler, externalRef, itemRef);\n  React.useDebugValue({\n    id: id,\n    highlighted: highlighted,\n    disabled: disabled,\n    label: label\n  });\n\n  var createHandleClick = function createHandleClick(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onClic;\n\n      (_otherHandlers$onClic = otherHandlers.onClick) == null || _otherHandlers$onClic.call(otherHandlers, event);\n\n      if (event.defaultMuiPrevented) {\n        return;\n      }\n\n      dispatch({\n        type: DropdownActionTypes.close,\n        event: event\n      });\n    };\n  };\n\n  var getOwnHandlers = function getOwnHandlers() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, otherHandlers, {\n      onClick: createHandleClick(otherHandlers)\n    });\n  };\n\n  function getRootProps() {\n    var externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var externalEventHandlers = extractEventHandlers(externalProps);\n    var getCombinedRootProps = combineHooksSlotProps(getOwnHandlers, combineHooksSlotProps(getButtonProps, getListRootProps));\n    return _extends({}, externalProps, externalEventHandlers, getCombinedRootProps(externalEventHandlers), {\n      id: id,\n      ref: handleRef,\n      role: 'menuitem'\n    });\n  } // If `id` is undefined (during SSR in React < 18), we fall back to rendering a simplified menu item\n  // which does not have access to infortmation about its position or highlighted state.\n\n\n  if (id === undefined) {\n    return {\n      getRootProps: getRootProps,\n      disabled: false,\n      focusVisible: focusVisible,\n      highlighted: false,\n      index: -1,\n      totalItemCount: 0,\n      rootRef: handleRef\n    };\n  }\n\n  return {\n    getRootProps: getRootProps,\n    disabled: disabled,\n    focusVisible: focusVisible,\n    highlighted: highlighted,\n    index: index,\n    totalItemCount: totalItemCount,\n    rootRef: handleRef\n  };\n}","map":{"version":3,"sources":["C:/Projects/Mod_App_Front/node_modules/@mui/base/useMenuItem/useMenuItem.js"],"names":["_extends","React","unstable_useId","useId","unstable_useForkRef","useForkRef","useButton","useListItem","DropdownActionTypes","DropdownContext","combineHooksSlotProps","useCompoundItem","extractEventHandlers","idGenerator","existingKeys","size","FALLBACK_MENU_CONTEXT","dispatch","popupId","registerPopup","registerTrigger","state","open","changeReason","triggerElement","useMenuItem","params","_React$useContext","disabled","idParam","id","externalRef","rootRef","label","disableFocusOnHover","itemRef","useRef","itemMetadata","useMemo","ref","useContext","item","handlePointerOverEvents","getListRootProps","getRootProps","highlighted","index","totalItemCount","focusableWhenDisabled","getButtonProps","focusVisible","buttonRefHandler","handleRef","useDebugValue","createHandleClick","otherHandlers","event","_otherHandlers$onClic","onClick","call","defaultMuiPrevented","type","close","getOwnHandlers","externalProps","externalEventHandlers","getCombinedRootProps","role","undefined"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../useButton';\nimport { useListItem } from '../useList';\nimport { DropdownActionTypes } from '../useDropdown';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\nimport { useCompoundItem } from '../useCompound';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nfunction idGenerator(existingKeys) {\n  return `menu-item-${existingKeys.size}`;\n}\nconst FALLBACK_MENU_CONTEXT = {\n  dispatch: () => {},\n  popupId: '',\n  registerPopup: () => {},\n  registerTrigger: () => {},\n  state: {\n    open: true,\n    changeReason: null\n  },\n  triggerElement: null\n};\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuItem API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu-item)\n */\nexport function useMenuItem(params) {\n  var _React$useContext;\n  const {\n    disabled = false,\n    id: idParam,\n    rootRef: externalRef,\n    label,\n    disableFocusOnHover = false\n  } = params;\n  const id = useId(idParam);\n  const itemRef = React.useRef(null);\n  const itemMetadata = React.useMemo(() => ({\n    disabled,\n    id: id != null ? id : '',\n    label,\n    ref: itemRef\n  }), [disabled, id, label]);\n  const {\n    dispatch\n  } = (_React$useContext = React.useContext(DropdownContext)) != null ? _React$useContext : FALLBACK_MENU_CONTEXT;\n  const {\n    getRootProps: getListRootProps,\n    highlighted\n  } = useListItem({\n    item: id,\n    handlePointerOverEvents: !disableFocusOnHover\n  });\n  const {\n    index,\n    totalItemCount\n  } = useCompoundItem(id != null ? id : idGenerator, itemMetadata);\n  const {\n    getRootProps: getButtonProps,\n    focusVisible,\n    rootRef: buttonRefHandler\n  } = useButton({\n    disabled,\n    focusableWhenDisabled: true\n  });\n  const handleRef = useForkRef(buttonRefHandler, externalRef, itemRef);\n  React.useDebugValue({\n    id,\n    highlighted,\n    disabled,\n    label\n  });\n  const createHandleClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n    (_otherHandlers$onClic = otherHandlers.onClick) == null || _otherHandlers$onClic.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    dispatch({\n      type: DropdownActionTypes.close,\n      event\n    });\n  };\n  const getOwnHandlers = (otherHandlers = {}) => _extends({}, otherHandlers, {\n    onClick: createHandleClick(otherHandlers)\n  });\n  function getRootProps(externalProps = {}) {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    const getCombinedRootProps = combineHooksSlotProps(getOwnHandlers, combineHooksSlotProps(getButtonProps, getListRootProps));\n    return _extends({}, externalProps, externalEventHandlers, getCombinedRootProps(externalEventHandlers), {\n      id,\n      ref: handleRef,\n      role: 'menuitem'\n    });\n  }\n\n  // If `id` is undefined (during SSR in React < 18), we fall back to rendering a simplified menu item\n  // which does not have access to infortmation about its position or highlighted state.\n  if (id === undefined) {\n    return {\n      getRootProps,\n      disabled: false,\n      focusVisible,\n      highlighted: false,\n      index: -1,\n      totalItemCount: 0,\n      rootRef: handleRef\n    };\n  }\n  return {\n    getRootProps,\n    disabled,\n    focusVisible,\n    highlighted,\n    index,\n    totalItemCount,\n    rootRef: handleRef\n  };\n}"]},"metadata":{},"sourceType":"module"}