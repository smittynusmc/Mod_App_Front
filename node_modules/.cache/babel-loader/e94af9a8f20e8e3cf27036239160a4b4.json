{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"className\", \"enterAnimationName\", \"enterClassName\", \"exitAnimationName\", \"exitClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTransitionStateManager } from '../useTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/)\n *\n * API:\n *\n * - [CssAnimation API](https://mui.com/base-ui/react-transitions/components-api/#css-animation)\n */\n\nfunction CssAnimation(props) {\n  var children = props.children,\n      className = props.className,\n      enterAnimationName = props.enterAnimationName,\n      enterClassName = props.enterClassName,\n      exitAnimationName = props.exitAnimationName,\n      exitClassName = props.exitClassName,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useTransitionStateMa = useTransitionStateManager(),\n      requestedEnter = _useTransitionStateMa.requestedEnter,\n      onExited = _useTransitionStateMa.onExited;\n\n  var hasExited = React.useRef(true);\n  React.useEffect(function () {\n    if (requestedEnter && hasExited.current) {\n      hasExited.current = false;\n    }\n  }, [requestedEnter]);\n  var handleAnimationEnd = React.useCallback(function (event) {\n    if (event.animationName === exitAnimationName) {\n      onExited();\n      hasExited.current = true;\n    } else if (event.animationName === enterAnimationName) {\n      hasExited.current = false;\n    }\n  }, [onExited, exitAnimationName, enterAnimationName]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    onAnimationEnd: handleAnimationEnd,\n    className: clsx(className, requestedEnter ? enterClassName : exitClassName)\n  }, other, {\n    children: children\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssAnimation.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  enterAnimationName: PropTypes.string,\n  enterClassName: PropTypes.string,\n  exitAnimationName: PropTypes.string,\n  exitClassName: PropTypes.string\n} : void 0;\nexport { CssAnimation };","map":{"version":3,"sources":["C:/Projects/Mod_App_Front/node_modules/@mui/base/Transitions/CssAnimation.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","useTransitionStateManager","jsx","_jsx","CssAnimation","props","children","className","enterAnimationName","enterClassName","exitAnimationName","exitClassName","other","requestedEnter","onExited","hasExited","useRef","useEffect","current","handleAnimationEnd","useCallback","event","animationName","onAnimationEnd","process","env","NODE_ENV","propTypes","node","string"],"mappings":"AAAA;;AAEA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,IAAMC,SAAS,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,oBAA1B,EAAgD,gBAAhD,EAAkE,mBAAlE,EAAuF,eAAvF,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,yBAAT,QAA0C,kBAA1C;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MACIC,QADJ,GAOMD,KAPN,CACIC,QADJ;AAAA,MAEIC,SAFJ,GAOMF,KAPN,CAEIE,SAFJ;AAAA,MAGIC,kBAHJ,GAOMH,KAPN,CAGIG,kBAHJ;AAAA,MAIIC,cAJJ,GAOMJ,KAPN,CAIII,cAJJ;AAAA,MAKIC,iBALJ,GAOML,KAPN,CAKIK,iBALJ;AAAA,MAMIC,aANJ,GAOMN,KAPN,CAMIM,aANJ;AAAA,MAQEC,KARF,GAQUhB,6BAA6B,CAACS,KAAD,EAAQR,SAAR,CARvC;;AASA,8BAGII,yBAAyB,EAH7B;AAAA,MACEY,cADF,yBACEA,cADF;AAAA,MAEEC,QAFF,yBAEEA,QAFF;;AAIA,MAAMC,SAAS,GAAGjB,KAAK,CAACkB,MAAN,CAAa,IAAb,CAAlB;AACAlB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,YAAM;AACpB,QAAIJ,cAAc,IAAIE,SAAS,CAACG,OAAhC,EAAyC;AACvCH,MAAAA,SAAS,CAACG,OAAV,GAAoB,KAApB;AACD;AACF,GAJD,EAIG,CAACL,cAAD,CAJH;AAKA,MAAMM,kBAAkB,GAAGrB,KAAK,CAACsB,WAAN,CAAkB,UAAAC,KAAK,EAAI;AACpD,QAAIA,KAAK,CAACC,aAAN,KAAwBZ,iBAA5B,EAA+C;AAC7CI,MAAAA,QAAQ;AACRC,MAAAA,SAAS,CAACG,OAAV,GAAoB,IAApB;AACD,KAHD,MAGO,IAAIG,KAAK,CAACC,aAAN,KAAwBd,kBAA5B,EAAgD;AACrDO,MAAAA,SAAS,CAACG,OAAV,GAAoB,KAApB;AACD;AACF,GAP0B,EAOxB,CAACJ,QAAD,EAAWJ,iBAAX,EAA8BF,kBAA9B,CAPwB,CAA3B;AAQA,SAAO,aAAaL,IAAI,CAAC,KAAD,EAAQR,QAAQ,CAAC;AACvC4B,IAAAA,cAAc,EAAEJ,kBADuB;AAEvCZ,IAAAA,SAAS,EAAEP,IAAI,CAACO,SAAD,EAAYM,cAAc,GAAGJ,cAAH,GAAoBE,aAA9C;AAFwB,GAAD,EAGrCC,KAHqC,EAG9B;AACRN,IAAAA,QAAQ,EAAEA;AADF,GAH8B,CAAhB,CAAxB;AAMD;;AACDkB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCtB,YAAY,CAACuB,SAAb,GAAyB;AAC/DrB,EAAAA,QAAQ,EAAEP,SAAS,CAAC6B,IAD2C;AAE/DrB,EAAAA,SAAS,EAAER,SAAS,CAAC8B,MAF0C;AAG/DrB,EAAAA,kBAAkB,EAAET,SAAS,CAAC8B,MAHiC;AAI/DpB,EAAAA,cAAc,EAAEV,SAAS,CAAC8B,MAJqC;AAK/DnB,EAAAA,iBAAiB,EAAEX,SAAS,CAAC8B,MALkC;AAM/DlB,EAAAA,aAAa,EAAEZ,SAAS,CAAC8B;AANsC,CAAjE,GAOI,KAAK,CAPT;AAQA,SAASzB,YAAT","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"enterAnimationName\", \"enterClassName\", \"exitAnimationName\", \"exitClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTransitionStateManager } from '../useTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/)\n *\n * API:\n *\n * - [CssAnimation API](https://mui.com/base-ui/react-transitions/components-api/#css-animation)\n */\nfunction CssAnimation(props) {\n  const {\n      children,\n      className,\n      enterAnimationName,\n      enterClassName,\n      exitAnimationName,\n      exitClassName\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    requestedEnter,\n    onExited\n  } = useTransitionStateManager();\n  const hasExited = React.useRef(true);\n  React.useEffect(() => {\n    if (requestedEnter && hasExited.current) {\n      hasExited.current = false;\n    }\n  }, [requestedEnter]);\n  const handleAnimationEnd = React.useCallback(event => {\n    if (event.animationName === exitAnimationName) {\n      onExited();\n      hasExited.current = true;\n    } else if (event.animationName === enterAnimationName) {\n      hasExited.current = false;\n    }\n  }, [onExited, exitAnimationName, enterAnimationName]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    onAnimationEnd: handleAnimationEnd,\n    className: clsx(className, requestedEnter ? enterClassName : exitClassName)\n  }, other, {\n    children: children\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? CssAnimation.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  enterAnimationName: PropTypes.string,\n  enterClassName: PropTypes.string,\n  exitAnimationName: PropTypes.string,\n  exitClassName: PropTypes.string\n} : void 0;\nexport { CssAnimation };"]},"metadata":{},"sourceType":"module"}