{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{TextField,Button,Select,MenuItem,InputLabel,FormControl,Typography,Container,Paper,List,ListItem,ListItemText,CircularProgress}from\"@mui/material\";import RandomPicker from\"./RandomPicker\";// Import RandomPicker component\nimport\"./YouTubeComments.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const YouTubeComments=()=>{const[videoId,setVideoId]=useState(\"\");const[commentAuthors,setCommentAuthors]=useState([]);const[accessToken,setAccessToken]=useState(\"\");const[maxResults,setMaxResults]=useState(10);const[error,setError]=useState(null);const[loading,setLoading]=useState(false);const[winner,setWinner]=useState(null);useEffect(()=>{const urlParams=new URLSearchParams(window.location.search);const token=urlParams.get(\"access_token\");const videoIdParam=urlParams.get(\"videoId\");const maxResultsParam=urlParams.get(\"maxResults\");if(token){setAccessToken(token);if(videoIdParam)setVideoId(videoIdParam);if(maxResultsParam)setMaxResults(Number(maxResultsParam));fetchComments(token,videoIdParam,maxResultsParam);}},[]);const extractVideoId=input=>{try{const urlObj=new URL(input);const params=new URLSearchParams(urlObj.search);if(params.has(\"v\")){return params.get(\"v\");}const pathname=urlObj.pathname;if(pathname.startsWith(\"/embed/\")){return pathname.split(\"/embed/\")[1];}if(pathname.startsWith(\"/v/\")){return pathname.split(\"/v/\")[1];}if(pathname.startsWith(\"/watch\")){return params.get(\"v\");}return input;}catch(e){return input;}};const handleAuth=async(videoId,maxResults)=>{const state=btoa(JSON.stringify({videoId,maxResults}));window.location.href=\"https://youtube-comments-backend-23opjzqi7q-uc.a.run.app/auth/google?state=\".concat(state);};const fetchComments=async(token,videoId,maxResults)=>{setError(null);setLoading(true);setCommentAuthors([]);// Clear previous comments to indicate loading\ntry{const response=await axios.post(\"https://youtube-comments-backend-23opjzqi7q-uc.a.run.app/youtube/comments\",{videoId:videoId||extractVideoId(videoId),accessToken:token||accessToken,maxResults});if(response.data&&response.data.length>0){const commentThreads=response.data;const authors=commentThreads.flatMap(thread=>[thread.snippet.topLevelComment.snippet.authorDisplayName,...(thread.replies?thread.replies.comments.map(reply=>reply.snippet.authorDisplayName):[])]);setCommentAuthors(authors);console.log(\"Fetched authors:\",authors);}else{setError(\"No comments found.\");console.log(\"No comments found\");}setLoading(false);}catch(error){console.error(\"Error fetching comment threads\",error);if(error.response&&error.response.status===401){setError(\"Session expired. Please re-authenticate.\");handleAuth(videoId,maxResults);}else if(error.response&&error.response.status===404){setError(\"Video not found\");}else{setError(\"Failed to fetch comments. Please try again.\");}setLoading(false);}};const handleFetchComments=async()=>{if(!accessToken){await handleAuth(videoId,maxResults);}else{await fetchComments(accessToken,videoId,maxResults);}};const handleWinnerSelected=selectedWinner=>{setWinner(selectedWinner);console.log(\"Winner selected:\",selectedWinner);};return/*#__PURE__*/_jsxs(Container,{component:Paper,elevation:3,className:\"youtube-comments\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"YouTube Comment Picker\"}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"YouTube Video URL or ID\",variant:\"outlined\",value:videoId,onChange:e=>setVideoId(e.target.value),margin:\"normal\",className:\"youtube-comments__input\"}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,variant:\"outlined\",margin:\"normal\",className:\"youtube-comments__select\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Max Results\"}),/*#__PURE__*/_jsxs(Select,{value:maxResults,onChange:e=>setMaxResults(Number(e.target.value)),label:\"Max Results\",children:[/*#__PURE__*/_jsx(MenuItem,{value:10,children:\"10\"}),/*#__PURE__*/_jsx(MenuItem,{value:15,children:\"15\"}),/*#__PURE__*/_jsx(MenuItem,{value:25,children:\"25\"}),/*#__PURE__*/_jsx(MenuItem,{value:50,children:\"50\"}),/*#__PURE__*/_jsx(MenuItem,{value:100,children:\"100\"})]})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleFetchComments,disabled:loading,className:\"youtube-comments__button\",children:\"Fetch Comments\"}),loading&&/*#__PURE__*/_jsx(CircularProgress,{className:\"youtube-comments__loading\"}),error&&/*#__PURE__*/_jsx(Typography,{color:\"error\",className:\"youtube-comments__error\",children:error}),/*#__PURE__*/_jsx(List,{className:\"scrollable-list\",children:commentAuthors.length>0?commentAuthors.map((author,index)=>/*#__PURE__*/_jsx(ListItem,{className:\"youtube-comments__list-item\",children:/*#__PURE__*/_jsx(ListItemText,{primary:author})},index)):!loading&&/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:\"youtube-comments__no-comments\",children:\"No comments to display.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"youtube-comments__picker\",children:/*#__PURE__*/_jsx(RandomPicker,{items:commentAuthors,onWinnerSelected:handleWinnerSelected})}),winner&&/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",color:\"primary\",className:\"youtube-comments__winner\",children:[\"The winner is: \",winner]})]});};export default YouTubeComments;","map":{"version":3,"names":["React","useState","useEffect","axios","TextField","Button","Select","MenuItem","InputLabel","FormControl","Typography","Container","Paper","List","ListItem","ListItemText","CircularProgress","RandomPicker","jsx","_jsx","jsxs","_jsxs","YouTubeComments","videoId","setVideoId","commentAuthors","setCommentAuthors","accessToken","setAccessToken","maxResults","setMaxResults","error","setError","loading","setLoading","winner","setWinner","urlParams","URLSearchParams","window","location","search","token","get","videoIdParam","maxResultsParam","Number","fetchComments","extractVideoId","input","urlObj","URL","params","has","pathname","startsWith","split","e","handleAuth","state","btoa","JSON","stringify","href","concat","response","post","data","length","commentThreads","authors","flatMap","thread","snippet","topLevelComment","authorDisplayName","replies","comments","map","reply","console","log","status","handleFetchComments","handleWinnerSelected","selectedWinner","component","elevation","className","children","variant","gutterBottom","fullWidth","label","value","onChange","target","margin","color","onClick","disabled","author","index","primary","items","onWinnerSelected"],"sources":["C:/Projects/Mod_App_Front/src/components/YouTubeComments.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Typography,\r\n  Container,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport RandomPicker from \"./RandomPicker\"; // Import RandomPicker component\r\nimport \"./YouTubeComments.css\";\r\n\r\nconst YouTubeComments = () => {\r\n  const [videoId, setVideoId] = useState(\"\");\r\n  const [commentAuthors, setCommentAuthors] = useState([]);\r\n  const [accessToken, setAccessToken] = useState(\"\");\r\n  const [maxResults, setMaxResults] = useState(10);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const token = urlParams.get(\"access_token\");\r\n    const videoIdParam = urlParams.get(\"videoId\");\r\n    const maxResultsParam = urlParams.get(\"maxResults\");\r\n\r\n    if (token) {\r\n      setAccessToken(token);\r\n      if (videoIdParam) setVideoId(videoIdParam);\r\n      if (maxResultsParam) setMaxResults(Number(maxResultsParam));\r\n      fetchComments(token, videoIdParam, maxResultsParam);\r\n    }\r\n  }, []);\r\n\r\n  const extractVideoId = (input) => {\r\n    try {\r\n      const urlObj = new URL(input);\r\n      const params = new URLSearchParams(urlObj.search);\r\n      if (params.has(\"v\")) {\r\n        return params.get(\"v\");\r\n      }\r\n      const pathname = urlObj.pathname;\r\n      if (pathname.startsWith(\"/embed/\")) {\r\n        return pathname.split(\"/embed/\")[1];\r\n      }\r\n      if (pathname.startsWith(\"/v/\")) {\r\n        return pathname.split(\"/v/\")[1];\r\n      }\r\n      if (pathname.startsWith(\"/watch\")) {\r\n        return params.get(\"v\");\r\n      }\r\n      return input;\r\n    } catch (e) {\r\n      return input;\r\n    }\r\n  };\r\n\r\n  const handleAuth = async (videoId, maxResults) => {\r\n    const state = btoa(JSON.stringify({ videoId, maxResults }));\r\n    window.location.href = `https://youtube-comments-backend-23opjzqi7q-uc.a.run.app/auth/google?state=${state}`;\r\n  };\r\n\r\n  const fetchComments = async (token, videoId, maxResults) => {\r\n    setError(null);\r\n    setLoading(true);\r\n    setCommentAuthors([]); // Clear previous comments to indicate loading\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://youtube-comments-backend-23opjzqi7q-uc.a.run.app/youtube/comments\",\r\n        {\r\n          videoId: videoId || extractVideoId(videoId),\r\n          accessToken: token || accessToken,\r\n          maxResults,\r\n        }\r\n      );\r\n      if (response.data && response.data.length > 0) {\r\n        const commentThreads = response.data;\r\n        const authors = commentThreads.flatMap((thread) => [\r\n          thread.snippet.topLevelComment.snippet.authorDisplayName,\r\n          ...(thread.replies\r\n            ? thread.replies.comments.map(\r\n                (reply) => reply.snippet.authorDisplayName\r\n              )\r\n            : []),\r\n        ]);\r\n        setCommentAuthors(authors);\r\n        console.log(\"Fetched authors:\", authors);\r\n      } else {\r\n        setError(\"No comments found.\");\r\n        console.log(\"No comments found\");\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching comment threads\", error);\r\n      if (error.response && error.response.status === 401) {\r\n        setError(\"Session expired. Please re-authenticate.\");\r\n        handleAuth(videoId, maxResults);\r\n      } else if (error.response && error.response.status === 404) {\r\n        setError(\"Video not found\");\r\n      } else {\r\n        setError(\"Failed to fetch comments. Please try again.\");\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFetchComments = async () => {\r\n    if (!accessToken) {\r\n      await handleAuth(videoId, maxResults);\r\n    } else {\r\n      await fetchComments(accessToken, videoId, maxResults);\r\n    }\r\n  };\r\n\r\n  const handleWinnerSelected = (selectedWinner) => {\r\n    setWinner(selectedWinner);\r\n    console.log(\"Winner selected:\", selectedWinner);\r\n  };\r\n\r\n  return (\r\n    <Container component={Paper} elevation={3} className=\"youtube-comments\">\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        YouTube Comment Picker\r\n      </Typography>\r\n      <TextField\r\n        fullWidth\r\n        label=\"YouTube Video URL or ID\"\r\n        variant=\"outlined\"\r\n        value={videoId}\r\n        onChange={(e) => setVideoId(e.target.value)}\r\n        margin=\"normal\"\r\n        className=\"youtube-comments__input\"\r\n      />\r\n      <FormControl\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        className=\"youtube-comments__select\"\r\n      >\r\n        <InputLabel>Max Results</InputLabel>\r\n        <Select\r\n          value={maxResults}\r\n          onChange={(e) => setMaxResults(Number(e.target.value))}\r\n          label=\"Max Results\"\r\n        >\r\n          <MenuItem value={10}>10</MenuItem>\r\n          <MenuItem value={15}>15</MenuItem>\r\n          <MenuItem value={25}>25</MenuItem>\r\n          <MenuItem value={50}>50</MenuItem>\r\n          <MenuItem value={100}>100</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleFetchComments}\r\n        disabled={loading}\r\n        className=\"youtube-comments__button\"\r\n      >\r\n        Fetch Comments\r\n      </Button>\r\n      {loading && <CircularProgress className=\"youtube-comments__loading\" />}\r\n      {error && (\r\n        <Typography color=\"error\" className=\"youtube-comments__error\">\r\n          {error}\r\n        </Typography>\r\n      )}\r\n      <List className=\"scrollable-list\">\r\n        {commentAuthors.length > 0\r\n          ? commentAuthors.map((author, index) => (\r\n              <ListItem key={index} className=\"youtube-comments__list-item\">\r\n                <ListItemText primary={author} />\r\n              </ListItem>\r\n            ))\r\n          : !loading && (\r\n              <Typography\r\n                variant=\"body1\"\r\n                className=\"youtube-comments__no-comments\"\r\n              >\r\n                No comments to display.\r\n              </Typography>\r\n            )}\r\n      </List>\r\n      <div className=\"youtube-comments__picker\">\r\n        <RandomPicker\r\n          items={commentAuthors}\r\n          onWinnerSelected={handleWinnerSelected}\r\n        />\r\n      </div>\r\n      {winner && (\r\n        <Typography\r\n          variant=\"h6\"\r\n          color=\"primary\"\r\n          className=\"youtube-comments__winner\"\r\n        >\r\n          The winner is: {winner}\r\n        </Typography>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default YouTubeComments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}