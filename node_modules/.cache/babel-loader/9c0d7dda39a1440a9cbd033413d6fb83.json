{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Mod_App_Front\\\\src\\\\components\\\\signInWIthGoogle.js\";\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { auth, db } from \"./firebase\";\nimport { toast } from \"react-toastify\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignInwithGoogle() {\n  function googleLogin() {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider).then(async result => {\n      console.log(result);\n      const user = result.user;\n\n      if (result.user) {\n        await setDoc(doc(db, \"Users\", user.uid), {\n          email: user.email,\n          firstName: user.displayName,\n          photo: user.photoURL,\n          lastName: \"\"\n        });\n        toast.success(\"User logged in Successfully\", {\n          position: \"top-center\"\n        });\n        window.location.href = \"/profile\";\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"continue-p\",\n      children: \"--Or continue with--\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        cursor: \"pointer\"\n      },\n      onClick: googleLogin,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"../google.png\"),\n        width: \"60%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SignInwithGoogle;\nexport default SignInwithGoogle;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInwithGoogle\");","map":{"version":3,"sources":["C:/Projects/Mod_App_Front/src/components/signInWIthGoogle.js"],"names":["GoogleAuthProvider","signInWithPopup","auth","db","toast","setDoc","doc","SignInwithGoogle","googleLogin","provider","then","result","console","log","user","uid","email","firstName","displayName","photo","photoURL","lastName","success","position","window","location","href","display","justifyContent","cursor","require"],"mappings":";AAAA,SAASA,kBAAT,EAA6BC,eAA7B,QAAoD,eAApD;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,YAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,oBAA5B;;;AAEA,SAASC,gBAAT,GAA4B;AAC1B,WAASC,WAAT,GAAuB;AACrB,UAAMC,QAAQ,GAAG,IAAIT,kBAAJ,EAAjB;AACAC,IAAAA,eAAe,CAACC,IAAD,EAAOO,QAAP,CAAf,CAAgCC,IAAhC,CAAqC,MAAOC,MAAP,IAAkB;AACrDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,YAAMG,IAAI,GAAGH,MAAM,CAACG,IAApB;;AACA,UAAIH,MAAM,CAACG,IAAX,EAAiB;AACf,cAAMT,MAAM,CAACC,GAAG,CAACH,EAAD,EAAK,OAAL,EAAcW,IAAI,CAACC,GAAnB,CAAJ,EAA6B;AACvCC,UAAAA,KAAK,EAAEF,IAAI,CAACE,KAD2B;AAEvCC,UAAAA,SAAS,EAAEH,IAAI,CAACI,WAFuB;AAGvCC,UAAAA,KAAK,EAAEL,IAAI,CAACM,QAH2B;AAIvCC,UAAAA,QAAQ,EAAE;AAJ6B,SAA7B,CAAZ;AAMAjB,QAAAA,KAAK,CAACkB,OAAN,CAAc,6BAAd,EAA6C;AAC3CC,UAAAA,QAAQ,EAAE;AADiC,SAA7C;AAGAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,UAAvB;AACD;AACF,KAfD;AAgBD;;AACD,sBACE;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE,QAAnC;AAA6CC,QAAAA,MAAM,EAAE;AAArD,OADT;AAEE,MAAA,OAAO,EAAErB,WAFX;AAAA,6BAIE;AAAK,QAAA,GAAG,EAAEsB,OAAO,CAAC,eAAD,CAAjB;AAAoC,QAAA,KAAK,EAAE;AAA3C;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KA/BQvB,gB;AAgCT,eAAeA,gBAAf","sourcesContent":["import { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport { auth, db } from \"./firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setDoc, doc } from \"firebase/firestore\";\r\n\r\nfunction SignInwithGoogle() {\r\n  function googleLogin() {\r\n    const provider = new GoogleAuthProvider();\r\n    signInWithPopup(auth, provider).then(async (result) => {\r\n      console.log(result);\r\n      const user = result.user;\r\n      if (result.user) {\r\n        await setDoc(doc(db, \"Users\", user.uid), {\r\n          email: user.email,\r\n          firstName: user.displayName,\r\n          photo: user.photoURL,\r\n          lastName: \"\",\r\n        });\r\n        toast.success(\"User logged in Successfully\", {\r\n          position: \"top-center\",\r\n        });\r\n        window.location.href = \"/profile\";\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <p className=\"continue-p\">--Or continue with--</p>\r\n      <div\r\n        style={{ display: \"flex\", justifyContent: \"center\", cursor: \"pointer\" }}\r\n        onClick={googleLogin}\r\n      >\r\n        <img src={require(\"../google.png\")} width={\"60%\"} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SignInwithGoogle;\r\n"]},"metadata":{},"sourceType":"module"}