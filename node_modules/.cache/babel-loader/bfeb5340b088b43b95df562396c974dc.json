{"ast":null,"code":"import _asyncToGenerator from\"C:/Projects/Mod_App_Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Projects\\\\Mod_App_Front\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{GoogleAuthProvider,signInWithPopup}from\"firebase/auth\";import{auth,db}from\"./firebase\";import{toast}from\"react-toastify\";import{setDoc,doc}from\"firebase/firestore\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SignInwithGoogle(){var googleLogin=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,result,user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:provider=new GoogleAuthProvider();_context.prev=1;_context.next=4;return signInWithPopup(auth,provider);case 4:result=_context.sent;user=result.user;if(!user){_context.next=11;break;}_context.next=9;return setDoc(doc(db,\"Users\",user.uid),{email:user.email,firstName:user.displayName,photo:user.photoURL,lastName:\"\"});case 9:toast.success(\"User logged in Successfully\",{position:\"top-center\"});window.location.href=\"/profile\";case 11:_context.next=17;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);console.error(\"Error during sign-in:\",_context.t0);toast.error(\"Error during sign-in. Please try again.\",{position:\"bottom-center\"});case 17:case\"end\":return _context.stop();}}},_callee,null,[[1,13]]);}));return function googleLogin(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"continue-p\",children:\"--Or continue with--\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"center\",cursor:\"pointer\"},onClick:googleLogin,children:/*#__PURE__*/_jsx(\"img\",{src:require(\"../google.png\"),width:\"60%\",alt:\"Sign in with Google\"})})]});}export default SignInwithGoogle;","map":{"version":3,"sources":["C:/Projects/Mod_App_Front/src/components/signInWIthGoogle.js"],"names":["GoogleAuthProvider","signInWithPopup","auth","db","toast","setDoc","doc","SignInwithGoogle","googleLogin","provider","result","user","uid","email","firstName","displayName","photo","photoURL","lastName","success","position","window","location","href","console","error","display","justifyContent","cursor","require"],"mappings":"wOAAA,OAASA,kBAAT,CAA6BC,eAA7B,KAAoD,eAApD,CACA,OAASC,IAAT,CAAeC,EAAf,KAAyB,YAAzB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,MAAT,CAAiBC,GAAjB,KAA4B,oBAA5B,C,wFAEA,QAASC,CAAAA,gBAAT,EAA4B,CAC1B,GAAMC,CAAAA,WAAW,0FAAG,4JACZC,QADY,CACD,GAAIT,CAAAA,kBAAJ,EADC,uCAGKC,CAAAA,eAAe,CAACC,IAAD,CAAOO,QAAP,CAHpB,QAGVC,MAHU,eAIVC,IAJU,CAIHD,MAAM,CAACC,IAJJ,KAKZA,IALY,gDAMRN,CAAAA,MAAM,CAACC,GAAG,CAACH,EAAD,CAAK,OAAL,CAAcQ,IAAI,CAACC,GAAnB,CAAJ,CAA6B,CACvCC,KAAK,CAAEF,IAAI,CAACE,KAD2B,CAEvCC,SAAS,CAAEH,IAAI,CAACI,WAFuB,CAGvCC,KAAK,CAAEL,IAAI,CAACM,QAH2B,CAIvCC,QAAQ,CAAE,EAJ6B,CAA7B,CANE,QAYdd,KAAK,CAACe,OAAN,CAAc,6BAAd,CAA6C,CAC3CC,QAAQ,CAAE,YADiC,CAA7C,EAGAC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,UAAvB,CAfc,yFAkBhBC,OAAO,CAACC,KAAR,CAAc,uBAAd,cACArB,KAAK,CAACqB,KAAN,CAAY,yCAAZ,CAAuD,CACrDL,QAAQ,CAAE,eAD2C,CAAvD,EAnBgB,qEAAH,kBAAXZ,CAAAA,WAAW,0CAAjB,CAyBA,mBACE,oCACE,UAAG,SAAS,CAAC,YAAb,kCADF,cAEE,YACE,KAAK,CAAE,CAAEkB,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,QAAnC,CAA6CC,MAAM,CAAE,SAArD,CADT,CAEE,OAAO,CAAEpB,WAFX,uBAIE,YAAK,GAAG,CAAEqB,OAAO,CAAC,eAAD,CAAjB,CAAoC,KAAK,CAAE,KAA3C,CAAkD,GAAG,CAAC,qBAAtD,EAJF,EAFF,GADF,CAWD,CAED,cAAetB,CAAAA,gBAAf","sourcesContent":["import { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport { auth, db } from \"./firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setDoc, doc } from \"firebase/firestore\";\r\n\r\nfunction SignInwithGoogle() {\r\n  const googleLogin = async () => {\r\n    const provider = new GoogleAuthProvider();\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      const user = result.user;\r\n      if (user) {\r\n        await setDoc(doc(db, \"Users\", user.uid), {\r\n          email: user.email,\r\n          firstName: user.displayName,\r\n          photo: user.photoURL,\r\n          lastName: \"\",\r\n        });\r\n        toast.success(\"User logged in Successfully\", {\r\n          position: \"top-center\",\r\n        });\r\n        window.location.href = \"/profile\";\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during sign-in:\", error);\r\n      toast.error(\"Error during sign-in. Please try again.\", {\r\n        position: \"bottom-center\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"continue-p\">--Or continue with--</p>\r\n      <div\r\n        style={{ display: \"flex\", justifyContent: \"center\", cursor: \"pointer\" }}\r\n        onClick={googleLogin}\r\n      >\r\n        <img src={require(\"../google.png\")} width={\"60%\"} alt=\"Sign in with Google\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInwithGoogle;\r\n"]},"metadata":{},"sourceType":"module"}