{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import\"./Wheel.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Wheel=_ref=>{let{mustStartSpinning,prizeNumber,data,onStopSpinning}=_ref;const[start,setStart]=useState(false);const[spinningTime,setSpinningTime]=useState(0);const wheelRef=useRef(null);useEffect(()=>{if(mustStartSpinning){setStart(true);const time=3+Math.random()*2;// spin duration between 3 to 5 seconds\nsetSpinningTime(time*1000);setTimeout(()=>{setStart(false);onStopSpinning();},time*1000);}},[mustStartSpinning,onStopSpinning]);const spinStyle={transition:\"transform \".concat(spinningTime,\"ms cubic-bezier(0.33, 1, 0.68, 1)\"),transform:start?\"rotate(\".concat(360*5+360/data.length*prizeNumber,\"deg)\"):\"rotate(0deg)\"};// CSS in JS\nconst wheelStyle={borderRadius:\"50%\"// This makes the wheel a circle\n// Add other styles as needed\n};// CSS in JS\nconst segmentStyle=(index,data)=>({position:'absolute',width:'100%',height:'100%',background:index%2?'#f0f0f0':'#ccc',// alternating colors for visibility\ntransformOrigin:'50% 100%',transform:\"rotate(\".concat(index*360/data.length,\"deg) skewY(-45deg)\")// Add other styles as needed\n});return/*#__PURE__*/_jsxs(\"div\",{className:\"wheel-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"wheel\",ref:wheelRef,style:{...spinStyle,...wheelStyle},children:data.map((item,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"wheel-segment\",style:segmentStyle(index,data),children:/*#__PURE__*/_jsx(\"div\",{className:\"wheel-text\",children:item.option})},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"wheel-pointer\"})]});};export default Wheel;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","Wheel","_ref","mustStartSpinning","prizeNumber","data","onStopSpinning","start","setStart","spinningTime","setSpinningTime","wheelRef","time","Math","random","setTimeout","spinStyle","transition","concat","transform","length","wheelStyle","borderRadius","segmentStyle","index","position","width","height","background","transformOrigin","className","children","ref","style","map","item","option"],"sources":["C:/Projects/Mod_App_Front/src/components/Wheel.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Wheel.css\";\r\n\r\nconst Wheel = ({ mustStartSpinning, prizeNumber, data, onStopSpinning }) => {\r\n  const [start, setStart] = useState(false);\r\n  const [spinningTime, setSpinningTime] = useState(0);\r\n  const wheelRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (mustStartSpinning) {\r\n      setStart(true);\r\n      const time = 3 + Math.random() * 2; // spin duration between 3 to 5 seconds\r\n      setSpinningTime(time * 1000);\r\n      setTimeout(() => {\r\n        setStart(false);\r\n        onStopSpinning();\r\n      }, time * 1000);\r\n    }\r\n  }, [mustStartSpinning, onStopSpinning]);\r\n\r\n  const spinStyle = {\r\n    transition: `transform ${spinningTime}ms cubic-bezier(0.33, 1, 0.68, 1)`,\r\n    transform: start\r\n      ? `rotate(${360 * 5 + (360 / data.length) * prizeNumber}deg)`\r\n      : \"rotate(0deg)\",\r\n  };\r\n\r\n  // CSS in JS\r\nconst wheelStyle = {\r\n  borderRadius: \"50%\", // This makes the wheel a circle\r\n  // Add other styles as needed\r\n};\r\n\r\n// CSS in JS\r\nconst segmentStyle = (index, data) => ({\r\n  position: 'absolute',\r\n  width: '100%',\r\n  height: '100%',\r\n  background: index % 2 ? '#f0f0f0' : '#ccc', // alternating colors for visibility\r\n  transformOrigin: '50% 100%',\r\n  transform: `rotate(${(index * 360) / data.length}deg) skewY(-45deg)`,\r\n  // Add other styles as needed\r\n});\r\n\r\n  return (\r\n    <div className=\"wheel-container\">\r\n      <div className=\"wheel\" ref={wheelRef} style={{...spinStyle, ...wheelStyle}}>\r\n        {data.map((item, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"wheel-segment\"\r\n            style={segmentStyle(index, data)}\r\n          >\r\n            <div className=\"wheel-text\">{item.option}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"wheel-pointer\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wheel;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAA8D,IAA7D,CAAEC,iBAAiB,CAAEC,WAAW,CAAEC,IAAI,CAAEC,cAAe,CAAC,CAAAJ,IAAA,CACrE,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CACzC,KAAM,CAACe,YAAY,CAAEC,eAAe,CAAC,CAAGhB,QAAQ,CAAC,CAAC,CAAC,CACnD,KAAM,CAAAiB,QAAQ,CAAGf,MAAM,CAAC,IAAI,CAAC,CAE7BD,SAAS,CAAC,IAAM,CACd,GAAIQ,iBAAiB,CAAE,CACrBK,QAAQ,CAAC,IAAI,CAAC,CACd,KAAM,CAAAI,IAAI,CAAG,CAAC,CAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,CAAC,CAAE;AACpCJ,eAAe,CAACE,IAAI,CAAG,IAAI,CAAC,CAC5BG,UAAU,CAAC,IAAM,CACfP,QAAQ,CAAC,KAAK,CAAC,CACfF,cAAc,CAAC,CAAC,CAClB,CAAC,CAAEM,IAAI,CAAG,IAAI,CAAC,CACjB,CACF,CAAC,CAAE,CAACT,iBAAiB,CAAEG,cAAc,CAAC,CAAC,CAEvC,KAAM,CAAAU,SAAS,CAAG,CAChBC,UAAU,cAAAC,MAAA,CAAeT,YAAY,qCAAmC,CACxEU,SAAS,CAAEZ,KAAK,WAAAW,MAAA,CACF,GAAG,CAAG,CAAC,CAAI,GAAG,CAAGb,IAAI,CAACe,MAAM,CAAIhB,WAAW,SACrD,cACN,CAAC,CAED;AACF,KAAM,CAAAiB,UAAU,CAAG,CACjBC,YAAY,CAAE,KAAO;AACrB;AACF,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAGA,CAACC,KAAK,CAAEnB,IAAI,IAAM,CACrCoB,QAAQ,CAAE,UAAU,CACpBC,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MAAM,CACdC,UAAU,CAAEJ,KAAK,CAAG,CAAC,CAAG,SAAS,CAAG,MAAM,CAAE;AAC5CK,eAAe,CAAE,UAAU,CAC3BV,SAAS,WAAAD,MAAA,CAAaM,KAAK,CAAG,GAAG,CAAInB,IAAI,CAACe,MAAM,sBAChD;AACF,CAAC,CAAC,CAEA,mBACEpB,KAAA,QAAK8B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BjC,IAAA,QAAKgC,SAAS,CAAC,OAAO,CAACE,GAAG,CAAErB,QAAS,CAACsB,KAAK,CAAE,CAAC,GAAGjB,SAAS,CAAE,GAAGK,UAAU,CAAE,CAAAU,QAAA,CACxE1B,IAAI,CAAC6B,GAAG,CAAC,CAACC,IAAI,CAAEX,KAAK,gBACpB1B,IAAA,QAEEgC,SAAS,CAAC,eAAe,CACzBG,KAAK,CAAEV,YAAY,CAACC,KAAK,CAAEnB,IAAI,CAAE,CAAA0B,QAAA,cAEjCjC,IAAA,QAAKgC,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEI,IAAI,CAACC,MAAM,CAAM,CAAC,EAJ1CZ,KAKF,CACN,CAAC,CACC,CAAC,cACN1B,IAAA,QAAKgC,SAAS,CAAC,eAAe,CAAE,CAAC,EAC9B,CAAC,CAEV,CAAC,CAED,cAAe,CAAA7B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}