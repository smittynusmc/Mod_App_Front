{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"disabled\", \"label\", \"id\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getMenuItemUtilityClass } from './menuItemClasses';\nimport { useMenuItem, useMenuItemContextStabilizer } from '../useMenuItem';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSlotProps } from '../utils/useSlotProps';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { ListContext } from '../useList';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  var disabled = ownerState.disabled,\n      focusVisible = ownerState.focusVisible;\n  var slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuItemUtilityClass));\n}\n\nvar InnerMenuItem = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function MenuItem(props, forwardedRef) {\n  var _slots$root;\n\n  var children = props.children,\n      _props$disabled = props.disabled,\n      disabledProp = _props$disabled === void 0 ? false : _props$disabled,\n      label = props.label,\n      id = props.id,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      _props$slots = props.slots,\n      slots = _props$slots === void 0 ? {} : _props$slots,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useMenuItem = useMenuItem({\n    id: id,\n    disabled: disabledProp,\n    rootRef: forwardedRef,\n    label: label\n  }),\n      getRootProps = _useMenuItem.getRootProps,\n      disabled = _useMenuItem.disabled,\n      focusVisible = _useMenuItem.focusVisible,\n      highlighted = _useMenuItem.highlighted;\n\n  var ownerState = _extends({}, props, {\n    disabled: disabled,\n    focusVisible: focusVisible,\n    highlighted: highlighted\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var Root = (_slots$root = slots.root) != null ? _slots$root : 'li';\n  var rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n}));\n/**\n * An unstyled menu item to be used within a Menu.\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [MenuItem API](https://mui.com/base-ui/react-menu/components-api/#menu-item)\n */\n\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var idProp = props.id; // This wrapper component is used as a performance optimization.\n  // `useMenuItemContextStabilizer` ensures that the context value\n  // is stable across renders, so that the actual MenuItem re-renders\n  // only when it needs to.\n\n  var _useMenuItemContextSt = useMenuItemContextStabilizer(idProp),\n      contextValue = _useMenuItemContextSt.contextValue,\n      id = _useMenuItemContextSt.id;\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(InnerMenuItem, _extends({}, props, {\n      id: id,\n      ref: ref\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the menu item will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the menu item won't receive focus when the mouse moves over it.\n   *\n   * @default false\n   */\n  disableFocusOnHover: PropTypes.bool,\n\n  /**\n   * A text representation of the menu item's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The props used for each slot inside the MenuItem.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the MenuItem.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { MenuItem };","map":{"version":3,"sources":["C:/Projects/Mod_App_Front/node_modules/@mui/base/MenuItem/MenuItem.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","getMenuItemUtilityClass","useMenuItem","useMenuItemContextStabilizer","unstable_composeClasses","composeClasses","useSlotProps","useClassNamesOverride","ListContext","jsx","_jsx","useUtilityClasses","ownerState","disabled","focusVisible","slots","root","InnerMenuItem","memo","forwardRef","MenuItem","props","forwardedRef","_slots$root","children","disabledProp","label","id","slotProps","other","rootRef","getRootProps","highlighted","classes","Root","rootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","className","ref","idProp","contextValue","Provider","value","process","env","NODE_ENV","propTypes","node","string","bool","disableFocusOnHover","onClick","func","shape","oneOfType","object"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"label\", \"id\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getMenuItemUtilityClass } from './menuItemClasses';\nimport { useMenuItem, useMenuItemContextStabilizer } from '../useMenuItem';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSlotProps } from '../utils/useSlotProps';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { ListContext } from '../useList';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuItemUtilityClass));\n}\nconst InnerMenuItem = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function MenuItem(props, forwardedRef) {\n  var _slots$root;\n  const {\n      children,\n      disabled: disabledProp = false,\n      label,\n      id,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    disabled,\n    focusVisible,\n    highlighted\n  } = useMenuItem({\n    id,\n    disabled: disabledProp,\n    rootRef: forwardedRef,\n    label\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    focusVisible,\n    highlighted\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'li';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n}));\n\n/**\n * An unstyled menu item to be used within a Menu.\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [MenuItem API](https://mui.com/base-ui/react-menu/components-api/#menu-item)\n */\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  const {\n    id: idProp\n  } = props;\n\n  // This wrapper component is used as a performance optimization.\n  // `useMenuItemContextStabilizer` ensures that the context value\n  // is stable across renders, so that the actual MenuItem re-renders\n  // only when it needs to.\n  const {\n    contextValue,\n    id\n  } = useMenuItemContextStabilizer(idProp);\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(InnerMenuItem, _extends({}, props, {\n      id: id,\n      ref: ref\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the menu item will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the menu item won't receive focus when the mouse moves over it.\n   *\n   * @default false\n   */\n  disableFocusOnHover: PropTypes.bool,\n  /**\n   * A text representation of the menu item's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The props used for each slot inside the MenuItem.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the MenuItem.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { MenuItem };"]},"metadata":{},"sourceType":"module"}