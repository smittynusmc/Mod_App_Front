{"ast":null,"code":"import _asyncToGenerator from\"C:/Projects/Mod_App_Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Projects\\\\Mod_App_Front\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React from\"react\";import{GoogleAuthProvider,signInWithPopup}from\"firebase/auth\";import{auth,db}from\"./firebase\";import{toast}from\"react-toastify\";import{setDoc,doc}from\"firebase/firestore\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SignInWithGoogle(){var navigate=useNavigate();var googleLogin=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,result,user,errorMessage,_response$headers$get,response,parsedError;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:provider=new GoogleAuthProvider();_context.prev=1;_context.next=4;return signInWithPopup(auth,provider);case 4:result=_context.sent;user=result.user;if(!user){_context.next=11;break;}_context.next=9;return setDoc(doc(db,\"Users\",user.uid),{email:user.email,firstName:user.displayName,photo:user.photoURL,lastName:\"\"});case 9:toast.success(\"User logged in successfully\",{position:\"top-center\"});navigate(\"/profile\");// Use navigate to redirect to profile page\ncase 11:_context.next=42;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);console.error(\"Error during sign-in:\",_context.t0);if(!(_context.t0.code==='auth/popup-closed-by-user')){_context.next=20;break;}toast.error(\"Sign-in popup was closed. Please try again.\",{position:\"bottom-center\"});_context.next=42;break;case 20:errorMessage=\"Error during sign-in. Please try again.\";if(!_context.t0.message){_context.next=41;break;}_context.prev=22;_context.next=25;return fetch(_context.t0.message);case 25:response=_context.sent;if(!((_response$headers$get=response.headers.get(\"content-type\"))!==null&&_response$headers$get!==void 0&&_response$headers$get.includes(\"application/json\"))){_context.next=33;break;}_context.next=29;return response.json();case 29:parsedError=_context.sent;errorMessage=parsedError.error||errorMessage;_context.next=36;break;case 33:_context.next=35;return response.text();case 35:errorMessage=_context.sent;case 36:_context.next=41;break;case 38:_context.prev=38;_context.t1=_context[\"catch\"](22);if(_context.t0.message.includes(\"Unauthorized\")){errorMessage=\"Unauthorized access. Please try again.\";}case 41:toast.error(errorMessage,{position:\"bottom-center\"});case 42:case\"end\":return _context.stop();}}},_callee,null,[[1,13],[22,38]]);}));return function googleLogin(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"continue-p\",children:\"--Or continue with--\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"center\",cursor:\"pointer\"},onClick:googleLogin,children:/*#__PURE__*/_jsx(\"img\",{src:require(\"../google.png\"),width:\"60%\",alt:\"Sign in with Google\"})})]});}export default SignInWithGoogle;","map":{"version":3,"sources":["C:/Projects/Mod_App_Front/src/components/signInWIthGoogle.js"],"names":["React","GoogleAuthProvider","signInWithPopup","auth","db","toast","setDoc","doc","useNavigate","SignInWithGoogle","navigate","googleLogin","provider","result","user","uid","email","firstName","displayName","photo","photoURL","lastName","success","position","console","error","code","errorMessage","message","fetch","response","headers","get","includes","json","parsedError","text","display","justifyContent","cursor","require"],"mappings":"wOAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,kBAAT,CAA6BC,eAA7B,KAAoD,eAApD,CACA,OAASC,IAAT,CAAeC,EAAf,KAAyB,YAAzB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,MAAT,CAAiBC,GAAjB,KAA4B,oBAA5B,CACA,OAASC,WAAT,KAA4B,kBAA5B,C,wFAEA,QAASC,CAAAA,gBAAT,EAA4B,CAC1B,GAAMC,CAAAA,QAAQ,CAAGF,WAAW,EAA5B,CAEA,GAAMG,CAAAA,WAAW,0FAAG,oNACZC,QADY,CACD,GAAIX,CAAAA,kBAAJ,EADC,uCAGKC,CAAAA,eAAe,CAACC,IAAD,CAAOS,QAAP,CAHpB,QAGVC,MAHU,eAIVC,IAJU,CAIHD,MAAM,CAACC,IAJJ,KAKZA,IALY,gDAMRR,CAAAA,MAAM,CAACC,GAAG,CAACH,EAAD,CAAK,OAAL,CAAcU,IAAI,CAACC,GAAnB,CAAJ,CAA6B,CACvCC,KAAK,CAAEF,IAAI,CAACE,KAD2B,CAEvCC,SAAS,CAAEH,IAAI,CAACI,WAFuB,CAGvCC,KAAK,CAAEL,IAAI,CAACM,QAH2B,CAIvCC,QAAQ,CAAE,EAJ6B,CAA7B,CANE,QAYdhB,KAAK,CAACiB,OAAN,CAAc,6BAAd,CAA6C,CAC3CC,QAAQ,CAAE,YADiC,CAA7C,EAGAb,QAAQ,CAAC,UAAD,CAAR,CAAsB;AAfR,yFAkBhBc,OAAO,CAACC,KAAR,CAAc,uBAAd,cAlBgB,KAmBZ,YAAMC,IAAN,GAAe,2BAnBH,2BAoBdrB,KAAK,CAACoB,KAAN,CAAY,6CAAZ,CAA2D,CACzDF,QAAQ,CAAE,eAD+C,CAA3D,EApBc,+BAwBVI,YAxBU,CAwBK,yCAxBL,KAyBV,YAAMC,OAzBI,kEA2BaC,CAAAA,KAAK,CAAC,YAAMD,OAAP,CA3BlB,SA2BJE,QA3BI,2CA4BNA,QAAQ,CAACC,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,CA5BM,0CA4BN,sBAAsCC,QAAtC,CAA+C,kBAA/C,CA5BM,kDA6BkBH,CAAAA,QAAQ,CAACI,IAAT,EA7BlB,SA6BFC,WA7BE,eA8BRR,YAAY,CAAGQ,WAAW,CAACV,KAAZ,EAAqBE,YAApC,CA9BQ,sDAgCaG,CAAAA,QAAQ,CAACM,IAAT,EAhCb,SAgCRT,YAhCQ,yGAmCV,GAAI,YAAMC,OAAN,CAAcK,QAAd,CAAuB,cAAvB,CAAJ,CAA4C,CAC1CN,YAAY,CAAG,wCAAf,CACD,CArCS,QAwCdtB,KAAK,CAACoB,KAAN,CAAYE,YAAZ,CAA0B,CACxBJ,QAAQ,CAAE,eADc,CAA1B,EAxCc,6EAAH,kBAAXZ,CAAAA,WAAW,0CAAjB,CA+CA,mBACE,oCACE,UAAG,SAAS,CAAC,YAAb,kCADF,cAEE,YACE,KAAK,CAAE,CAAE0B,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,QAAnC,CAA6CC,MAAM,CAAE,SAArD,CADT,CAEE,OAAO,CAAE5B,WAFX,uBAIE,YAAK,GAAG,CAAE6B,OAAO,CAAC,eAAD,CAAjB,CAAoC,KAAK,CAAE,KAA3C,CAAkD,GAAG,CAAC,qBAAtD,EAJF,EAFF,GADF,CAWD,CAED,cAAe/B,CAAAA,gBAAf","sourcesContent":["import React from \"react\";\r\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport { auth, db } from \"./firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setDoc, doc } from \"firebase/firestore\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction SignInWithGoogle() {\r\n  const navigate = useNavigate();\r\n\r\n  const googleLogin = async () => {\r\n    const provider = new GoogleAuthProvider();\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      const user = result.user;\r\n      if (user) {\r\n        await setDoc(doc(db, \"Users\", user.uid), {\r\n          email: user.email,\r\n          firstName: user.displayName,\r\n          photo: user.photoURL,\r\n          lastName: \"\",\r\n        });\r\n        toast.success(\"User logged in successfully\", {\r\n          position: \"top-center\",\r\n        });\r\n        navigate(\"/profile\"); // Use navigate to redirect to profile page\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during sign-in:\", error);\r\n      if (error.code === 'auth/popup-closed-by-user') {\r\n        toast.error(\"Sign-in popup was closed. Please try again.\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      } else {\r\n        let errorMessage = \"Error during sign-in. Please try again.\";\r\n        if (error.message) {\r\n          try {\r\n            const response = await fetch(error.message);\r\n            if (response.headers.get(\"content-type\")?.includes(\"application/json\")) {\r\n              const parsedError = await response.json();\r\n              errorMessage = parsedError.error || errorMessage;\r\n            } else {\r\n              errorMessage = await response.text();\r\n            }\r\n          } catch (e) {\r\n            if (error.message.includes(\"Unauthorized\")) {\r\n              errorMessage = \"Unauthorized access. Please try again.\";\r\n            }\r\n          }\r\n        }\r\n        toast.error(errorMessage, {\r\n          position: \"bottom-center\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"continue-p\">--Or continue with--</p>\r\n      <div\r\n        style={{ display: \"flex\", justifyContent: \"center\", cursor: \"pointer\" }}\r\n        onClick={googleLogin}\r\n      >\r\n        <img src={require(\"../google.png\")} width={\"60%\"} alt=\"Sign in with Google\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInWithGoogle;\r\n"]},"metadata":{},"sourceType":"module"}