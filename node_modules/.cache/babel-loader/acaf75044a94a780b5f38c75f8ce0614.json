{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:/Projects/Mod_App_Front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { useRootElementName } from '../utils/useRootElementName';\n/**\n *\n * Demos:\n *\n * - [Button](https://mui.com/base-ui/react-button/#hook)\n *\n * API:\n *\n * - [useButton API](https://mui.com/base-ui/react-button/hooks-api/#use-button)\n */\n\nexport function useButton() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _parameters$disabled = parameters.disabled,\n      disabled = _parameters$disabled === void 0 ? false : _parameters$disabled,\n      focusableWhenDisabled = parameters.focusableWhenDisabled,\n      href = parameters.href,\n      externalRef = parameters.rootRef,\n      tabIndex = parameters.tabIndex,\n      to = parameters.to,\n      type = parameters.type,\n      rootElementNameProp = parameters.rootElementName;\n  var buttonRef = React.useRef();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      active = _React$useState2[0],\n      setActive = _React$useState2[1];\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisibleRef = _useIsFocusVisible.isFocusVisibleRef,\n      handleFocusVisible = _useIsFocusVisible.onFocus,\n      handleBlurVisible = _useIsFocusVisible.onBlur,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      focusVisible = _React$useState4[0],\n      setFocusVisible = _React$useState4[1];\n\n  if (disabled && !focusableWhenDisabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useEffect(function () {\n    isFocusVisibleRef.current = focusVisible;\n  }, [focusVisible, isFocusVisibleRef]);\n\n  var _useRootElementName = useRootElementName({\n    rootElementName: rootElementNameProp != null ? rootElementNameProp : href || to ? 'a' : undefined,\n    componentName: 'Button'\n  }),\n      _useRootElementName2 = _slicedToArray(_useRootElementName, 2),\n      rootElementName = _useRootElementName2[0],\n      updateRootElementName = _useRootElementName2[1];\n\n  var createHandleMouseLeave = function createHandleMouseLeave(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onMous;\n\n      if (focusVisible) {\n        event.preventDefault();\n      }\n\n      (_otherHandlers$onMous = otherHandlers.onMouseLeave) == null || _otherHandlers$onMous.call(otherHandlers, event);\n    };\n  };\n\n  var createHandleBlur = function createHandleBlur(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onBlur;\n\n      handleBlurVisible(event);\n\n      if (isFocusVisibleRef.current === false) {\n        setFocusVisible(false);\n      }\n\n      (_otherHandlers$onBlur = otherHandlers.onBlur) == null || _otherHandlers$onBlur.call(otherHandlers, event);\n    };\n  };\n\n  var createHandleFocus = function createHandleFocus(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onFocu2; // Fix for https://github.com/facebook/react/issues/7769\n\n\n      if (!buttonRef.current) {\n        buttonRef.current = event.currentTarget;\n      }\n\n      handleFocusVisible(event);\n\n      if (isFocusVisibleRef.current === true) {\n        var _otherHandlers$onFocu;\n\n        setFocusVisible(true);\n        (_otherHandlers$onFocu = otherHandlers.onFocusVisible) == null || _otherHandlers$onFocu.call(otherHandlers, event);\n      }\n\n      (_otherHandlers$onFocu2 = otherHandlers.onFocus) == null || _otherHandlers$onFocu2.call(otherHandlers, event);\n    };\n  };\n\n  var isNativeButton = function isNativeButton() {\n    var button = buttonRef.current;\n    return rootElementName === 'BUTTON' || rootElementName === 'INPUT' && ['button', 'submit', 'reset'].includes(button == null ? void 0 : button.type) || rootElementName === 'A' && (button == null ? void 0 : button.href);\n  };\n\n  var createHandleClick = function createHandleClick(otherHandlers) {\n    return function (event) {\n      if (!disabled) {\n        var _otherHandlers$onClic;\n\n        (_otherHandlers$onClic = otherHandlers.onClick) == null || _otherHandlers$onClic.call(otherHandlers, event);\n      }\n    };\n  };\n\n  var createHandleMouseDown = function createHandleMouseDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onMous2;\n\n      if (!disabled) {\n        setActive(true);\n        document.addEventListener('mouseup', function () {\n          setActive(false);\n        }, {\n          once: true\n        });\n      }\n\n      (_otherHandlers$onMous2 = otherHandlers.onMouseDown) == null || _otherHandlers$onMous2.call(otherHandlers, event);\n    };\n  };\n\n  var createHandleKeyDown = function createHandleKeyDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyD;\n\n      (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n\n      if (event.defaultMuiPrevented) {\n        return;\n      }\n\n      if (event.target === event.currentTarget && !isNativeButton() && event.key === ' ') {\n        event.preventDefault();\n      }\n\n      if (event.target === event.currentTarget && event.key === ' ' && !disabled) {\n        setActive(true);\n      } // Keyboard accessibility for non interactive elements\n\n\n      if (event.target === event.currentTarget && !isNativeButton() && event.key === 'Enter' && !disabled) {\n        var _otherHandlers$onClic2;\n\n        (_otherHandlers$onClic2 = otherHandlers.onClick) == null || _otherHandlers$onClic2.call(otherHandlers, event);\n        event.preventDefault();\n      }\n    };\n  };\n\n  var createHandleKeyUp = function createHandleKeyUp(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyU; // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n      // https://codesandbox.io/p/sandbox/button-keyup-preventdefault-dn7f0\n\n\n      if (event.target === event.currentTarget) {\n        setActive(false);\n      }\n\n      (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null || _otherHandlers$onKeyU.call(otherHandlers, event); // Keyboard accessibility for non interactive elements\n\n      if (event.target === event.currentTarget && !isNativeButton() && !disabled && event.key === ' ' && !event.defaultMuiPrevented) {\n        var _otherHandlers$onClic3;\n\n        (_otherHandlers$onClic3 = otherHandlers.onClick) == null || _otherHandlers$onClic3.call(otherHandlers, event);\n      }\n    };\n  };\n\n  var handleRef = useForkRef(updateRootElementName, externalRef, focusVisibleRef, buttonRef);\n  var buttonProps = {};\n\n  if (tabIndex !== undefined) {\n    buttonProps.tabIndex = tabIndex;\n  }\n\n  if (rootElementName === 'BUTTON') {\n    buttonProps.type = type != null ? type : 'button';\n\n    if (focusableWhenDisabled) {\n      buttonProps['aria-disabled'] = disabled;\n    } else {\n      buttonProps.disabled = disabled;\n    }\n  } else if (rootElementName === 'INPUT') {\n    if (type && ['button', 'submit', 'reset'].includes(type)) {\n      if (focusableWhenDisabled) {\n        buttonProps['aria-disabled'] = disabled;\n      } else {\n        buttonProps.disabled = disabled;\n      }\n    }\n  } else if (rootElementName !== '') {\n    if (!href && !to) {\n      buttonProps.role = 'button';\n      buttonProps.tabIndex = tabIndex != null ? tabIndex : 0;\n    }\n\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n      buttonProps.tabIndex = focusableWhenDisabled ? tabIndex != null ? tabIndex : 0 : -1;\n    }\n  }\n\n  var getRootProps = function getRootProps() {\n    var externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var externalEventHandlers = _extends({}, extractEventHandlers(parameters), extractEventHandlers(externalProps));\n\n    var props = _extends({\n      type: type\n    }, externalEventHandlers, buttonProps, externalProps, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onClick: createHandleClick(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onKeyDown: createHandleKeyDown(externalEventHandlers),\n      onKeyUp: createHandleKeyUp(externalEventHandlers),\n      onMouseDown: createHandleMouseDown(externalEventHandlers),\n      onMouseLeave: createHandleMouseLeave(externalEventHandlers),\n      ref: handleRef\n    }); // onFocusVisible can be present on the props or parameters,\n    // but it's not a valid React event handler so it must not be forwarded to the inner component.\n    // If present, it will be handled by the focus handler.\n\n\n    delete props.onFocusVisible;\n    return props;\n  };\n\n  return {\n    getRootProps: getRootProps,\n    focusVisible: focusVisible,\n    setFocusVisible: setFocusVisible,\n    active: active,\n    rootRef: handleRef\n  };\n}","map":{"version":3,"sources":["C:/Projects/Mod_App_Front/node_modules/@mui/base/useButton/useButton.js"],"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useIsFocusVisible","useIsFocusVisible","extractEventHandlers","useRootElementName","useButton","parameters","disabled","focusableWhenDisabled","href","externalRef","rootRef","tabIndex","to","type","rootElementNameProp","rootElementName","buttonRef","useRef","useState","active","setActive","isFocusVisibleRef","handleFocusVisible","onFocus","handleBlurVisible","onBlur","focusVisibleRef","ref","focusVisible","setFocusVisible","useEffect","current","undefined","componentName","updateRootElementName","createHandleMouseLeave","otherHandlers","event","_otherHandlers$onMous","preventDefault","onMouseLeave","call","createHandleBlur","_otherHandlers$onBlur","createHandleFocus","_otherHandlers$onFocu2","currentTarget","_otherHandlers$onFocu","onFocusVisible","isNativeButton","button","includes","createHandleClick","_otherHandlers$onClic","onClick","createHandleMouseDown","_otherHandlers$onMous2","document","addEventListener","once","onMouseDown","createHandleKeyDown","_otherHandlers$onKeyD","onKeyDown","defaultMuiPrevented","target","key","_otherHandlers$onClic2","createHandleKeyUp","_otherHandlers$onKeyU","onKeyUp","_otherHandlers$onClic3","handleRef","buttonProps","role","getRootProps","externalProps","externalEventHandlers","props"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { useRootElementName } from '../utils/useRootElementName';\n/**\n *\n * Demos:\n *\n * - [Button](https://mui.com/base-ui/react-button/#hook)\n *\n * API:\n *\n * - [useButton API](https://mui.com/base-ui/react-button/hooks-api/#use-button)\n */\nexport function useButton(parameters = {}) {\n  const {\n    disabled = false,\n    focusableWhenDisabled,\n    href,\n    rootRef: externalRef,\n    tabIndex,\n    to,\n    type,\n    rootElementName: rootElementNameProp\n  } = parameters;\n  const buttonRef = React.useRef();\n  const [active, setActive] = React.useState(false);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  if (disabled && !focusableWhenDisabled && focusVisible) {\n    setFocusVisible(false);\n  }\n  React.useEffect(() => {\n    isFocusVisibleRef.current = focusVisible;\n  }, [focusVisible, isFocusVisibleRef]);\n  const [rootElementName, updateRootElementName] = useRootElementName({\n    rootElementName: rootElementNameProp != null ? rootElementNameProp : href || to ? 'a' : undefined,\n    componentName: 'Button'\n  });\n  const createHandleMouseLeave = otherHandlers => event => {\n    var _otherHandlers$onMous;\n    if (focusVisible) {\n      event.preventDefault();\n    }\n    (_otherHandlers$onMous = otherHandlers.onMouseLeave) == null || _otherHandlers$onMous.call(otherHandlers, event);\n  };\n  const createHandleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null || _otherHandlers$onBlur.call(otherHandlers, event);\n  };\n  const createHandleFocus = otherHandlers => event => {\n    var _otherHandlers$onFocu2;\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      var _otherHandlers$onFocu;\n      setFocusVisible(true);\n      (_otherHandlers$onFocu = otherHandlers.onFocusVisible) == null || _otherHandlers$onFocu.call(otherHandlers, event);\n    }\n    (_otherHandlers$onFocu2 = otherHandlers.onFocus) == null || _otherHandlers$onFocu2.call(otherHandlers, event);\n  };\n  const isNativeButton = () => {\n    const button = buttonRef.current;\n    return rootElementName === 'BUTTON' || rootElementName === 'INPUT' && ['button', 'submit', 'reset'].includes(button == null ? void 0 : button.type) || rootElementName === 'A' && (button == null ? void 0 : button.href);\n  };\n  const createHandleClick = otherHandlers => event => {\n    if (!disabled) {\n      var _otherHandlers$onClic;\n      (_otherHandlers$onClic = otherHandlers.onClick) == null || _otherHandlers$onClic.call(otherHandlers, event);\n    }\n  };\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous2;\n    if (!disabled) {\n      setActive(true);\n      document.addEventListener('mouseup', () => {\n        setActive(false);\n      }, {\n        once: true\n      });\n    }\n    (_otherHandlers$onMous2 = otherHandlers.onMouseDown) == null || _otherHandlers$onMous2.call(otherHandlers, event);\n  };\n  const createHandleKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (event.target === event.currentTarget && !isNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n    if (event.target === event.currentTarget && event.key === ' ' && !disabled) {\n      setActive(true);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (event.target === event.currentTarget && !isNativeButton() && event.key === 'Enter' && !disabled) {\n      var _otherHandlers$onClic2;\n      (_otherHandlers$onClic2 = otherHandlers.onClick) == null || _otherHandlers$onClic2.call(otherHandlers, event);\n      event.preventDefault();\n    }\n  };\n  const createHandleKeyUp = otherHandlers => event => {\n    var _otherHandlers$onKeyU;\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/p/sandbox/button-keyup-preventdefault-dn7f0\n\n    if (event.target === event.currentTarget) {\n      setActive(false);\n    }\n    (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null || _otherHandlers$onKeyU.call(otherHandlers, event);\n\n    // Keyboard accessibility for non interactive elements\n    if (event.target === event.currentTarget && !isNativeButton() && !disabled && event.key === ' ' && !event.defaultMuiPrevented) {\n      var _otherHandlers$onClic3;\n      (_otherHandlers$onClic3 = otherHandlers.onClick) == null || _otherHandlers$onClic3.call(otherHandlers, event);\n    }\n  };\n  const handleRef = useForkRef(updateRootElementName, externalRef, focusVisibleRef, buttonRef);\n  const buttonProps = {};\n  if (tabIndex !== undefined) {\n    buttonProps.tabIndex = tabIndex;\n  }\n  if (rootElementName === 'BUTTON') {\n    buttonProps.type = type != null ? type : 'button';\n    if (focusableWhenDisabled) {\n      buttonProps['aria-disabled'] = disabled;\n    } else {\n      buttonProps.disabled = disabled;\n    }\n  } else if (rootElementName === 'INPUT') {\n    if (type && ['button', 'submit', 'reset'].includes(type)) {\n      if (focusableWhenDisabled) {\n        buttonProps['aria-disabled'] = disabled;\n      } else {\n        buttonProps.disabled = disabled;\n      }\n    }\n  } else if (rootElementName !== '') {\n    if (!href && !to) {\n      buttonProps.role = 'button';\n      buttonProps.tabIndex = tabIndex != null ? tabIndex : 0;\n    }\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n      buttonProps.tabIndex = focusableWhenDisabled ? tabIndex != null ? tabIndex : 0 : -1;\n    }\n  }\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = _extends({}, extractEventHandlers(parameters), extractEventHandlers(externalProps));\n    const props = _extends({\n      type\n    }, externalEventHandlers, buttonProps, externalProps, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onClick: createHandleClick(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onKeyDown: createHandleKeyDown(externalEventHandlers),\n      onKeyUp: createHandleKeyUp(externalEventHandlers),\n      onMouseDown: createHandleMouseDown(externalEventHandlers),\n      onMouseLeave: createHandleMouseLeave(externalEventHandlers),\n      ref: handleRef\n    });\n\n    // onFocusVisible can be present on the props or parameters,\n    // but it's not a valid React event handler so it must not be forwarded to the inner component.\n    // If present, it will be handled by the focus handler.\n    delete props.onFocusVisible;\n    return props;\n  };\n  return {\n    getRootProps,\n    focusVisible,\n    setFocusVisible,\n    active,\n    rootRef: handleRef\n  };\n}"]},"metadata":{},"sourceType":"module"}