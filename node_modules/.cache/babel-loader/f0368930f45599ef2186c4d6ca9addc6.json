{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { useListItem } from '../useList';\nimport { useCompoundItem } from '../useCompound';\nimport { useButton } from '../useButton';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\n/**\n *\n * Demos:\n *\n * - [Select](https://mui.com/base-ui/react-select/#hooks)\n *\n * API:\n *\n * - [useOption API](https://mui.com/base-ui/react-select/hooks-api/#use-option)\n */\n\nexport function useOption(params) {\n  var value = params.value,\n      label = params.label,\n      disabled = params.disabled,\n      optionRefParam = params.rootRef,\n      idParam = params.id;\n\n  var _useListItem = useListItem({\n    item: value\n  }),\n      getListItemProps = _useListItem.getRootProps,\n      highlighted = _useListItem.highlighted,\n      selected = _useListItem.selected;\n\n  var _useButton = useButton({\n    disabled: disabled,\n    focusableWhenDisabled: true\n  }),\n      getButtonProps = _useButton.getRootProps,\n      buttonRefHandler = _useButton.rootRef;\n\n  var id = useId(idParam);\n  var optionRef = React.useRef(null);\n  var selectOption = React.useMemo(function () {\n    return {\n      disabled: disabled,\n      label: label,\n      value: value,\n      ref: optionRef,\n      id: id\n    };\n  }, [disabled, label, value, id]);\n\n  var _useCompoundItem = useCompoundItem(value, selectOption),\n      index = _useCompoundItem.index;\n\n  var handleRef = useForkRef(optionRefParam, optionRef, buttonRefHandler);\n\n  var createHandleKeyDown = function createHandleKeyDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyD;\n\n      (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n\n      if (event.defaultMuiPrevented) {\n        return;\n      }\n\n      if ([' ', 'Enter'].includes(event.key)) {\n        event.defaultMuiPrevented = true; // prevent listbox onKeyDown\n      }\n    };\n  };\n\n  var getOwnHandlers = function getOwnHandlers() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      onKeyDown: createHandleKeyDown(otherHandlers)\n    };\n  };\n\n  return {\n    getRootProps: function getRootProps() {\n      var externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var externalEventHandlers = extractEventHandlers(externalProps);\n      var getCombinedRootProps = combineHooksSlotProps(getListItemProps, combineHooksSlotProps(getButtonProps, getOwnHandlers));\n      return _extends({}, externalProps, externalEventHandlers, getCombinedRootProps(externalEventHandlers), {\n        id: id,\n        ref: handleRef,\n        role: 'option',\n        'aria-selected': selected\n      });\n    },\n    highlighted: highlighted,\n    index: index,\n    selected: selected,\n    rootRef: handleRef\n  };\n}","map":{"version":3,"sources":["C:/Projects/Mod_App_Front/node_modules/@mui/base/useOption/useOption.js"],"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useId","useId","extractEventHandlers","useListItem","useCompoundItem","useButton","combineHooksSlotProps","useOption","params","value","label","disabled","optionRefParam","rootRef","idParam","id","item","getListItemProps","getRootProps","highlighted","selected","focusableWhenDisabled","getButtonProps","buttonRefHandler","optionRef","useRef","selectOption","useMemo","ref","index","handleRef","createHandleKeyDown","otherHandlers","event","_otherHandlers$onKeyD","onKeyDown","call","defaultMuiPrevented","includes","key","getOwnHandlers","externalProps","externalEventHandlers","getCombinedRootProps","role"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { useListItem } from '../useList';\nimport { useCompoundItem } from '../useCompound';\nimport { useButton } from '../useButton';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\n/**\n *\n * Demos:\n *\n * - [Select](https://mui.com/base-ui/react-select/#hooks)\n *\n * API:\n *\n * - [useOption API](https://mui.com/base-ui/react-select/hooks-api/#use-option)\n */\nexport function useOption(params) {\n  const {\n    value,\n    label,\n    disabled,\n    rootRef: optionRefParam,\n    id: idParam\n  } = params;\n  const {\n    getRootProps: getListItemProps,\n    highlighted,\n    selected\n  } = useListItem({\n    item: value\n  });\n  const {\n    getRootProps: getButtonProps,\n    rootRef: buttonRefHandler\n  } = useButton({\n    disabled,\n    focusableWhenDisabled: true\n  });\n  const id = useId(idParam);\n  const optionRef = React.useRef(null);\n  const selectOption = React.useMemo(() => ({\n    disabled,\n    label,\n    value,\n    ref: optionRef,\n    id\n  }), [disabled, label, value, id]);\n  const {\n    index\n  } = useCompoundItem(value, selectOption);\n  const handleRef = useForkRef(optionRefParam, optionRef, buttonRefHandler);\n  const createHandleKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if ([' ', 'Enter'].includes(event.key)) {\n      event.defaultMuiPrevented = true; // prevent listbox onKeyDown\n    }\n  };\n  const getOwnHandlers = (otherHandlers = {}) => ({\n    onKeyDown: createHandleKeyDown(otherHandlers)\n  });\n  return {\n    getRootProps: (externalProps = {}) => {\n      const externalEventHandlers = extractEventHandlers(externalProps);\n      const getCombinedRootProps = combineHooksSlotProps(getListItemProps, combineHooksSlotProps(getButtonProps, getOwnHandlers));\n      return _extends({}, externalProps, externalEventHandlers, getCombinedRootProps(externalEventHandlers), {\n        id,\n        ref: handleRef,\n        role: 'option',\n        'aria-selected': selected\n      });\n    },\n    highlighted,\n    index,\n    selected,\n    rootRef: handleRef\n  };\n}"]},"metadata":{},"sourceType":"module"}