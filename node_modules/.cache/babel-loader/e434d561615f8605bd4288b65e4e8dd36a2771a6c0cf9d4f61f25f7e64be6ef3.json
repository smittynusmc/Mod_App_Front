{"ast":null,"code":"class SpinWheel{constructor(canvasId,options,onFinish){this.canvas=document.getElementById(canvasId);this.ctx=this.canvas.getContext(\"2d\");this.options=options;this.onFinish=onFinish;this.angleCurrent=0;this.angleDelta=0;this.size=this.canvas.width/2;this.timerHandle=0;this.maxSpeed=Math.PI/this.options.length;this.upTime=this.options.length*100;// Customize duration\nthis.downTime=this.options.length*600;// Customize duration\nthis.spinStart=0;this.frames=0;this.centerX=this.size;this.centerY=this.size;this.initCanvas();this.drawWheel();}initCanvas(){this.canvas.style.borderRadius=\"50%\";// Set border radius for a circular shape\nthis.canvas.addEventListener(\"click\",this.spin.bind(this),false);}spin(){if(this.timerHandle===0){this.spinStart=new Date().getTime();this.maxSpeed=Math.PI/this.options.length;this.frames=0;this.timerHandle=setInterval(this.onTimerTick.bind(this),this.options.length*5);}}onTimerTick(){this.frames++;this.drawWheel();const duration=new Date().getTime()-this.spinStart;let progress=0;let finished=false;if(duration<this.upTime){progress=duration/this.upTime;this.angleDelta=this.maxSpeed*Math.sin(progress*Math.PI/2);}else{progress=duration/this.downTime;this.angleDelta=this.maxSpeed*Math.sin(progress*Math.PI/2+Math.PI/2);if(progress>=1)finished=true;}this.angleCurrent+=this.angleDelta;while(this.angleCurrent>=Math.PI*2)this.angleCurrent-=Math.PI*2;if(finished){clearInterval(this.timerHandle);this.timerHandle=0;this.angleDelta=0;this.onFinish(this.options[this.getCurrentSegmentIndex()].text);}}getCurrentSegmentIndex(){const change=this.angleCurrent+Math.PI/2;let i=this.options.length-Math.floor(change/(Math.PI*2)*this.options.length)-1;if(i<0)i=i+this.options.length;return i;}drawWheel(){this.clear();this.drawSegments();this.drawCenterCircle();this.drawNeedle();}clear(){this.ctx.clearRect(0,0,this.size*2,this.size*2);}drawSegments(){const len=this.options.length;const PI2=Math.PI*2;let lastAngle=this.angleCurrent;this.ctx.lineWidth=1;this.ctx.textBaseline=\"middle\";this.ctx.textAlign=\"center\";this.ctx.font=\"1em Arial\";for(let i=1;i<=len;i++){const angle=PI2*(i/len)+this.angleCurrent;this.drawSegment(i-1,lastAngle,angle);lastAngle=angle;}}drawSegment(key,lastAngle,angle){const ctx=this.ctx;const value=this.options[key].text;ctx.save();ctx.beginPath();ctx.moveTo(this.centerX,this.centerY);ctx.arc(this.centerX,this.centerY,this.size,lastAngle,angle,false);ctx.lineTo(this.centerX,this.centerY);ctx.closePath();ctx.fillStyle=this.options[key].color;ctx.fill();ctx.stroke();ctx.save();ctx.translate(this.centerX,this.centerY);ctx.rotate((lastAngle+angle)/2);ctx.fillStyle=\"white\";if(typeof value===\"string\"){ctx.fillText(value.substring(0,21),this.size/2+20,0);}else{console.error(\"Invalid value:\",value,\"Type of value:\",typeof value);}ctx.restore();}drawCenterCircle(){const ctx=this.ctx;const PI2=Math.PI*2;ctx.beginPath();ctx.arc(this.centerX,this.centerY,30,0,PI2,false);ctx.closePath();ctx.fillStyle=\"black\";ctx.lineWidth=2;ctx.strokeStyle=\"white\";ctx.fill();ctx.stroke();}drawNeedle(){const ctx=this.ctx;ctx.lineWidth=1;ctx.strokeStyle=\"white\";ctx.fillStyle=\"white\";ctx.beginPath();ctx.moveTo(this.centerX+20,this.centerY-30);ctx.lineTo(this.centerX-20,this.centerY-30);ctx.lineTo(this.centerX,this.centerY-this.centerY/2.5);ctx.closePath();ctx.fill();}}export default SpinWheel;","map":{"version":3,"names":["SpinWheel","constructor","canvasId","options","onFinish","canvas","document","getElementById","ctx","getContext","angleCurrent","angleDelta","size","width","timerHandle","maxSpeed","Math","PI","length","upTime","downTime","spinStart","frames","centerX","centerY","initCanvas","drawWheel","style","borderRadius","addEventListener","spin","bind","Date","getTime","setInterval","onTimerTick","duration","progress","finished","sin","clearInterval","getCurrentSegmentIndex","text","change","i","floor","clear","drawSegments","drawCenterCircle","drawNeedle","clearRect","len","PI2","lastAngle","lineWidth","textBaseline","textAlign","font","angle","drawSegment","key","value","save","beginPath","moveTo","arc","lineTo","closePath","fillStyle","color","fill","stroke","translate","rotate","fillText","substring","console","error","restore","strokeStyle"],"sources":["C:/Projects/Mod_App_Front/src/components/SpinWheel.js"],"sourcesContent":["class SpinWheel {\r\n  constructor(canvasId, options, onFinish) {\r\n    this.canvas = document.getElementById(canvasId);\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n    this.options = options;\r\n    this.onFinish = onFinish;\r\n    this.angleCurrent = 0;\r\n    this.angleDelta = 0;\r\n    this.size = this.canvas.width / 2;\r\n    this.timerHandle = 0;\r\n    this.maxSpeed = Math.PI / this.options.length;\r\n    this.upTime = this.options.length * 100; // Customize duration\r\n    this.downTime = this.options.length * 600; // Customize duration\r\n    this.spinStart = 0;\r\n    this.frames = 0;\r\n    this.centerX = this.size;\r\n    this.centerY = this.size;\r\n    this.initCanvas();\r\n    this.drawWheel();\r\n  }\r\n\r\n  initCanvas() {\r\n    this.canvas.style.borderRadius = \"50%\"; // Set border radius for a circular shape\r\n    this.canvas.addEventListener(\"click\", this.spin.bind(this), false);\r\n  }\r\n\r\n  spin() {\r\n    if (this.timerHandle === 0) {\r\n      this.spinStart = new Date().getTime();\r\n      this.maxSpeed = Math.PI / this.options.length;\r\n      this.frames = 0;\r\n      this.timerHandle = setInterval(\r\n        this.onTimerTick.bind(this),\r\n        this.options.length * 5\r\n      );\r\n    }\r\n  }\r\n\r\n  onTimerTick() {\r\n    this.frames++;\r\n    this.drawWheel();\r\n    const duration = new Date().getTime() - this.spinStart;\r\n    let progress = 0;\r\n    let finished = false;\r\n\r\n    if (duration < this.upTime) {\r\n      progress = duration / this.upTime;\r\n      this.angleDelta = this.maxSpeed * Math.sin((progress * Math.PI) / 2);\r\n    } else {\r\n      progress = duration / this.downTime;\r\n      this.angleDelta =\r\n        this.maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\r\n      if (progress >= 1) finished = true;\r\n    }\r\n\r\n    this.angleCurrent += this.angleDelta;\r\n    while (this.angleCurrent >= Math.PI * 2) this.angleCurrent -= Math.PI * 2;\r\n    if (finished) {\r\n      clearInterval(this.timerHandle);\r\n      this.timerHandle = 0;\r\n      this.angleDelta = 0;\r\n      this.onFinish(this.options[this.getCurrentSegmentIndex()].text);\r\n    }\r\n  }\r\n\r\n  getCurrentSegmentIndex() {\r\n    const change = this.angleCurrent + Math.PI / 2;\r\n    let i =\r\n      this.options.length -\r\n      Math.floor((change / (Math.PI * 2)) * this.options.length) -\r\n      1;\r\n    if (i < 0) i = i + this.options.length;\r\n    return i;\r\n  }\r\n\r\n  drawWheel() {\r\n    this.clear();\r\n    this.drawSegments();\r\n    this.drawCenterCircle();\r\n    this.drawNeedle();\r\n  }\r\n\r\n  clear() {\r\n    this.ctx.clearRect(0, 0, this.size * 2, this.size * 2);\r\n  }\r\n\r\n  drawSegments() {\r\n    const len = this.options.length;\r\n    const PI2 = Math.PI * 2;\r\n    let lastAngle = this.angleCurrent;\r\n    this.ctx.lineWidth = 1;\r\n    this.ctx.textBaseline = \"middle\";\r\n    this.ctx.textAlign = \"center\";\r\n    this.ctx.font = \"1em Arial\";\r\n    for (let i = 1; i <= len; i++) {\r\n      const angle = PI2 * (i / len) + this.angleCurrent;\r\n      this.drawSegment(i - 1, lastAngle, angle);\r\n      lastAngle = angle;\r\n    }\r\n  }\r\n\r\n  drawSegment(key, lastAngle, angle) {\r\n    const ctx = this.ctx;\r\n    const value = this.options[key].text;\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.centerX, this.centerY);\r\n    ctx.arc(this.centerX, this.centerY, this.size, lastAngle, angle, false);\r\n    ctx.lineTo(this.centerX, this.centerY);\r\n    ctx.closePath();\r\n    ctx.fillStyle = this.options[key].color;\r\n    ctx.fill();\r\n    ctx.stroke();\r\n    ctx.save();\r\n    ctx.translate(this.centerX, this.centerY);\r\n    ctx.rotate((lastAngle + angle) / 2);\r\n    ctx.fillStyle = \"white\";\r\n    if (typeof value === \"string\") {\r\n      ctx.fillText(value.substring(0, 21), this.size / 2 + 20, 0);\r\n    } else {\r\n      console.error(\"Invalid value:\", value, \"Type of value:\", typeof value);\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  drawCenterCircle() {\r\n    const ctx = this.ctx;\r\n    const PI2 = Math.PI * 2;\r\n    ctx.beginPath();\r\n    ctx.arc(this.centerX, this.centerY, 30, 0, PI2, false);\r\n    ctx.closePath();\r\n    ctx.fillStyle = \"black\";\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = \"white\";\r\n    ctx.fill();\r\n    ctx.stroke();\r\n  }\r\n\r\n  drawNeedle() {\r\n    const ctx = this.ctx;\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = \"white\";\r\n    ctx.fillStyle = \"white\";\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.centerX + 20, this.centerY - 30);\r\n    ctx.lineTo(this.centerX - 20, this.centerY - 30);\r\n    ctx.lineTo(this.centerX, this.centerY - this.centerY / 2.5);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nexport default SpinWheel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}