{"ast":null,"code":"import _asyncToGenerator from\"C:/Projects/Mod_App_Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Projects\\\\Mod_App_Front\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{GoogleAuthProvider,signInWithPopup,getIdToken}from\"firebase/auth\";import{auth,db}from\"./firebase\";import{toast}from\"react-toastify\";import{setDoc,doc}from\"firebase/firestore\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SignInWithGoogle(){var googleLogin=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,result,user,idToken,response,data,accessToken;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:provider=new GoogleAuthProvider();_context.prev=1;_context.next=4;return signInWithPopup(auth,provider);case 4:result=_context.sent;user=result.user;if(!user){_context.next=21;break;}_context.next=9;return setDoc(doc(db,\"Users\",user.uid),{email:user.email,firstName:user.displayName,photo:user.photoURL,lastName:\"\"});case 9:toast.success(\"User logged in successfully\",{position:\"top-center\"});// Obtain Firebase ID token\n_context.next=12;return getIdToken(user);case 12:idToken=_context.sent;_context.next=15;return fetch(\"https://youtube-comments-backend-23opjzqi7q-uc.a.run.app/auth/firebase\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({idToken:idToken})});case 15:response=_context.sent;_context.next=18;return response.json();case 18:data=_context.sent;accessToken=data.accessToken;// Redirect with access token\nwindow.location.href=\"/youtube-comments?access_token=\".concat(accessToken);case 21:_context.next=27;break;case 23:_context.prev=23;_context.t0=_context[\"catch\"](1);console.error(\"Error during sign-in:\",_context.t0);toast.error(\"Error during sign-in. Please try again.\",{position:\"bottom-center\"});case 27:case\"end\":return _context.stop();}}},_callee,null,[[1,23]]);}));return function googleLogin(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"continue-p\",children:\"--Or continue with--\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"center\",cursor:\"pointer\"},onClick:googleLogin,children:/*#__PURE__*/_jsx(\"img\",{src:require(\"../google.png\"),width:\"60%\",alt:\"Sign in with Google\"})})]});}export default SignInWithGoogle;","map":{"version":3,"sources":["C:/Projects/Mod_App_Front/src/components/signInWIthGoogle.js"],"names":["GoogleAuthProvider","signInWithPopup","getIdToken","auth","db","toast","setDoc","doc","SignInWithGoogle","googleLogin","provider","result","user","uid","email","firstName","displayName","photo","photoURL","lastName","success","position","idToken","fetch","method","headers","body","JSON","stringify","response","json","data","accessToken","window","location","href","console","error","display","justifyContent","cursor","require"],"mappings":"wOAAA,OAASA,kBAAT,CAA6BC,eAA7B,CAA8CC,UAA9C,KAAgE,eAAhE,CACA,OAASC,IAAT,CAAeC,EAAf,KAAyB,YAAzB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,MAAT,CAAiBC,GAAjB,KAA4B,oBAA5B,C,wFAEA,QAASC,CAAAA,gBAAT,EAA4B,CAC1B,GAAMC,CAAAA,WAAW,0FAAG,8LACZC,QADY,CACD,GAAIV,CAAAA,kBAAJ,EADC,uCAGKC,CAAAA,eAAe,CAACE,IAAD,CAAOO,QAAP,CAHpB,QAGVC,MAHU,eAIVC,IAJU,CAIHD,MAAM,CAACC,IAJJ,KAKZA,IALY,gDAMRN,CAAAA,MAAM,CAACC,GAAG,CAACH,EAAD,CAAK,OAAL,CAAcQ,IAAI,CAACC,GAAnB,CAAJ,CAA6B,CACvCC,KAAK,CAAEF,IAAI,CAACE,KAD2B,CAEvCC,SAAS,CAAEH,IAAI,CAACI,WAFuB,CAGvCC,KAAK,CAAEL,IAAI,CAACM,QAH2B,CAIvCC,QAAQ,CAAE,EAJ6B,CAA7B,CANE,QAYdd,KAAK,CAACe,OAAN,CAAc,6BAAd,CAA6C,CAC3CC,QAAQ,CAAE,YADiC,CAA7C,EAIA;AAhBc,uBAiBQnB,CAAAA,UAAU,CAACU,IAAD,CAjBlB,SAiBRU,OAjBQ,sCAoBSC,CAAAA,KAAK,CAAC,wEAAD,CAA2E,CACrGC,MAAM,CAAE,MAD6F,CAErGC,OAAO,CAAE,CACP,eAAgB,kBADT,CAF4F,CAKrGC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEN,OAAO,CAAPA,OAAF,CAAf,CAL+F,CAA3E,CApBd,SAoBRO,QApBQ,sCA4BKA,CAAAA,QAAQ,CAACC,IAAT,EA5BL,SA4BRC,IA5BQ,eA6BRC,WA7BQ,CA6BMD,IAAI,CAACC,WA7BX,CA+Bd;AACAC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,0CAAyDH,WAAzD,EAhCc,yFAmChBI,OAAO,CAACC,KAAR,CAAc,uBAAd,cACAhC,KAAK,CAACgC,KAAN,CAAY,yCAAZ,CAAuD,CACrDhB,QAAQ,CAAE,eAD2C,CAAvD,EApCgB,qEAAH,kBAAXZ,CAAAA,WAAW,0CAAjB,CA0CA,mBACE,oCACE,UAAG,SAAS,CAAC,YAAb,kCADF,cAEE,YACE,KAAK,CAAE,CAAE6B,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,QAAnC,CAA6CC,MAAM,CAAE,SAArD,CADT,CAEE,OAAO,CAAE/B,WAFX,uBAIE,YAAK,GAAG,CAAEgC,OAAO,CAAC,eAAD,CAAjB,CAAoC,KAAK,CAAE,KAA3C,CAAkD,GAAG,CAAC,qBAAtD,EAJF,EAFF,GADF,CAWD,CAED,cAAejC,CAAAA,gBAAf","sourcesContent":["import { GoogleAuthProvider, signInWithPopup, getIdToken } from \"firebase/auth\";\r\nimport { auth, db } from \"./firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setDoc, doc } from \"firebase/firestore\";\r\n\r\nfunction SignInWithGoogle() {\r\n  const googleLogin = async () => {\r\n    const provider = new GoogleAuthProvider();\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      const user = result.user;\r\n      if (user) {\r\n        await setDoc(doc(db, \"Users\", user.uid), {\r\n          email: user.email,\r\n          firstName: user.displayName,\r\n          photo: user.photoURL,\r\n          lastName: \"\",\r\n        });\r\n        toast.success(\"User logged in successfully\", {\r\n          position: \"top-center\",\r\n        });\r\n\r\n        // Obtain Firebase ID token\r\n        const idToken = await getIdToken(user);\r\n\r\n        // Send the ID token to your backend to exchange for a Google access token\r\n        const response = await fetch(\"https://youtube-comments-backend-23opjzqi7q-uc.a.run.app/auth/firebase\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ idToken }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        const accessToken = data.accessToken;\r\n\r\n        // Redirect with access token\r\n        window.location.href = `/youtube-comments?access_token=${accessToken}`;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during sign-in:\", error);\r\n      toast.error(\"Error during sign-in. Please try again.\", {\r\n        position: \"bottom-center\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"continue-p\">--Or continue with--</p>\r\n      <div\r\n        style={{ display: \"flex\", justifyContent: \"center\", cursor: \"pointer\" }}\r\n        onClick={googleLogin}\r\n      >\r\n        <img src={require(\"../google.png\")} width={\"60%\"} alt=\"Sign in with Google\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInWithGoogle;\r\n"]},"metadata":{},"sourceType":"module"}