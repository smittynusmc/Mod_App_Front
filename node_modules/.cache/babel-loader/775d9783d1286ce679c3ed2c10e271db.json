{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:/Projects/Mod_App_Front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"className\", \"lastTransitionedPropertyOnExit\", \"enterClassName\", \"exitClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTransitionStateManager } from '../useTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * A utility component that hooks up to the Base UI transitions API and\n * applies a CSS transition to its children when necessary.\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/)\n *\n * API:\n *\n * - [CssTransition API](https://mui.com/base-ui/react-transitions/components-api/#css-transition)\n */\n\nvar CssTransition = /*#__PURE__*/React.forwardRef(function CssTransition(props, forwardedRef) {\n  var children = props.children,\n      className = props.className,\n      lastTransitionedPropertyOnExit = props.lastTransitionedPropertyOnExit,\n      enterClassName = props.enterClassName,\n      exitClassName = props.exitClassName,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useTransitionStateMa = useTransitionStateManager(),\n      requestedEnter = _useTransitionStateMa.requestedEnter,\n      onExited = _useTransitionStateMa.onExited;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isEntering = _React$useState2[0],\n      setIsEntering = _React$useState2[1]; // The `isEntering` state (which is used to determine the right CSS class to apply)\n  // is updated slightly (one animation frame) after the `requestedEnter` state is updated.\n  // Thanks to this, elements that are mounted will have their enter transition applied\n  // (if the `enterClassName` was applied when the element was mounted, the transition would not be fired).\n\n\n  React.useEffect(function () {\n    if (requestedEnter) {\n      requestAnimationFrame(function () {\n        setIsEntering(true);\n      });\n    } else {\n      setIsEntering(false);\n    }\n  }, [requestedEnter]);\n  var handleTransitionEnd = React.useCallback(function (event) {\n    if (!requestedEnter && (lastTransitionedPropertyOnExit == null || event.propertyName === lastTransitionedPropertyOnExit)) {\n      onExited();\n    }\n  }, [onExited, requestedEnter, lastTransitionedPropertyOnExit]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    onTransitionEnd: handleTransitionEnd,\n    className: clsx(className, isEntering ? enterClassName : exitClassName)\n  }, other, {\n    ref: forwardedRef,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CssTransition.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  enterClassName: PropTypes.string,\n  exitClassName: PropTypes.string,\n  lastTransitionedPropertyOnEnter: PropTypes.string,\n  lastTransitionedPropertyOnExit: PropTypes.string\n} : void 0;\nexport { CssTransition };","map":{"version":3,"sources":["C:/Projects/Mod_App_Front/node_modules/@mui/base/Transitions/CssTransition.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","useTransitionStateManager","jsx","_jsx","CssTransition","forwardRef","props","forwardedRef","children","className","lastTransitionedPropertyOnExit","enterClassName","exitClassName","other","requestedEnter","onExited","useState","isEntering","setIsEntering","useEffect","requestAnimationFrame","handleTransitionEnd","useCallback","event","propertyName","onTransitionEnd","ref","process","env","NODE_ENV","propTypes","node","string","lastTransitionedPropertyOnEnter"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"lastTransitionedPropertyOnExit\", \"enterClassName\", \"exitClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTransitionStateManager } from '../useTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * A utility component that hooks up to the Base UI transitions API and\n * applies a CSS transition to its children when necessary.\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/)\n *\n * API:\n *\n * - [CssTransition API](https://mui.com/base-ui/react-transitions/components-api/#css-transition)\n */\nconst CssTransition = /*#__PURE__*/React.forwardRef(function CssTransition(props, forwardedRef) {\n  const {\n      children,\n      className,\n      lastTransitionedPropertyOnExit,\n      enterClassName,\n      exitClassName\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    requestedEnter,\n    onExited\n  } = useTransitionStateManager();\n  const [isEntering, setIsEntering] = React.useState(false);\n\n  // The `isEntering` state (which is used to determine the right CSS class to apply)\n  // is updated slightly (one animation frame) after the `requestedEnter` state is updated.\n  // Thanks to this, elements that are mounted will have their enter transition applied\n  // (if the `enterClassName` was applied when the element was mounted, the transition would not be fired).\n  React.useEffect(() => {\n    if (requestedEnter) {\n      requestAnimationFrame(() => {\n        setIsEntering(true);\n      });\n    } else {\n      setIsEntering(false);\n    }\n  }, [requestedEnter]);\n  const handleTransitionEnd = React.useCallback(event => {\n    if (!requestedEnter && (lastTransitionedPropertyOnExit == null || event.propertyName === lastTransitionedPropertyOnExit)) {\n      onExited();\n    }\n  }, [onExited, requestedEnter, lastTransitionedPropertyOnExit]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    onTransitionEnd: handleTransitionEnd,\n    className: clsx(className, isEntering ? enterClassName : exitClassName)\n  }, other, {\n    ref: forwardedRef,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CssTransition.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  enterClassName: PropTypes.string,\n  exitClassName: PropTypes.string,\n  lastTransitionedPropertyOnEnter: PropTypes.string,\n  lastTransitionedPropertyOnExit: PropTypes.string\n} : void 0;\nexport { CssTransition };"]},"metadata":{},"sourceType":"module"}